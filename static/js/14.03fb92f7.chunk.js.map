{"version":3,"sources":["api/apiHelper/apiHelper.js","api/apiSongs.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","constants/data.js","components/pages/PlayList.js"],"names":["apiURL","process","apiActions","url","method","data","a","fetch","headers","body","JSON","stringify","res","json","Error","getAllSongs","removeSong","id","addSong","updateSong","getSong","queryKey","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","_defineProperty","obj","value","configurable","writable","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError","statuses","status","icon","color","lazy","Statusses","NavigationPlayList","PlayList","match","useRouteMatch","useQuery","isLoading","isError","error","useState","items","setItems","playList","setPlayList","isOver","setIsOver","useEffect","dataCopy","parse","map","e","addToPlayList","item","newPlayList","some","index","findIndex","title","splice","style","display","flexDirection","isExact","alignSelf","margin","moveItem","dragIndex","hoverIndex","prevState","newItems","idx","onDrop","monitor","concat","changeStatusItems","itemsCopy","itemsSongs","itemsPlaylist","massage","message"],"mappings":"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","file":"static/js/14.03fb92f7.chunk.js","sourcesContent":["export const apiURL = `${process.env.REACT_APP_API_SERVER}/${process.env.REACT_APP_GITHUB_ACOUNT}`;\n\nexport const apiActions = async (url, method, data) => {\n  try {\n    const res = await fetch(url, {\n      method: method,\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    });\n    return method === \"DELETE\" ? true : res.json();\n  } catch (error) {\n    throw new Error(`somthing went wrong: ${error}`);\n  }\n};\n","import { apiActions, apiURL } from \"./apiHelper/apiHelper\";\n\nexport const getAllSongs = () => {\n  return apiActions(`${apiURL}-songs`, \"GET\");\n};\n\nexport const removeSong = (id) => {\n  return apiActions(`${apiURL}-songs/${id}`, \"DELETE\");\n};\n\nexport const addSong = (data) => {\n  return apiActions(`${apiURL}-songs`, \"POST\", data);\n};\n\nexport const updateSong = ({ id, ...data }) => {\n  return apiActions(`${apiURL}-songs/${id}`, \"PUT\", data);\n};\n\nexport const getSong = ({ queryKey }) => {\n  /*eslint-disable no-unused-vars*/\n  const [_key, { id }] = queryKey;\n  return apiActions(`${apiURL}-songs/${id}`, \"GET\");\n};\n","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export const statuses = [\n  {\n    status: \"songs\",\n    icon: \"⭕️\",\n    color: \"#EB5A46\",\n  },\n  {\n    status: \"playList\",\n    icon: \"🔆️\",\n    color: \"#00C2E0\",\n  },\n];\n","import React, { useState, useEffect, lazy } from \"react\";\nimport { useRouteMatch } from \"react-router-dom\";\n\nimport { useQuery } from \"react-query\";\nimport { getAllSongs } from \"../../api/apiSongs\";\nimport { statuses } from \"../../constants/data\";\nconst Error = lazy(() => import(\"../atom/Error\"));\nconst Statusses = lazy(() => import(\"../organism/playList/Statusses\"));\nconst NavigationPlayList = lazy(() =>\n  import(\"../organism/playList/NavigationPlayList\")\n);\n\nconst PlayList = () => {\n  const match = useRouteMatch();\n\n  const { data, isLoading, isError, error } = useQuery(\"songs\", getAllSongs);\n\n  const [items, setItems] = useState([]);\n\n  const [playList, setPlayList] = useState([]);\n  const [isOver, setIsOver] = useState();\n  useEffect(() => {\n    if (!isLoading) {\n      const dataCopy = JSON.parse(JSON.stringify([...data]));\n      [dataCopy.map((e) => (e.status = \"songs\"))];\n      setItems(dataCopy);\n    }\n  }, [data]);\n\n  const changeStatusItems = () => {\n    const itemsCopy = JSON.parse(JSON.stringify(items));\n    const itemsSongs = itemsCopy.filter((item) => item.status === \"songs\");\n    const itemsPlaylist = itemsCopy.filter(\n      (item) => item.status === \"playList\"\n    );\n    itemsPlaylist.forEach((e) => (e.status = \"songs\"));\n    setItems([...itemsSongs, ...itemsPlaylist]);\n\n    setPlayList([]);\n  };\n\n  const onDrop = (item, monitor, status) => {\n    addToPlayList(item, status);\n    setIsOver(isOver);\n    setItems((prevState) => {\n      const newItems = prevState\n        .filter((index) => index.id !== item.id)\n        .concat({ ...item, status });\n      return [...newItems];\n    });\n  };\n\n  const addToPlayList = (item, status) => {\n    const newPlayList = playList.some((e) => e.id === item.id);\n\n    if (status === \"playList\") {\n      !newPlayList && setPlayList([...playList, item]);\n    } else if (status === \"songs\") {\n      const index = playList.findIndex((e) => e.title === item.title);\n      newPlayList && playList.splice(index, 1);\n      setPlayList(playList);\n    }\n  };\n\n  const moveItem = (dragIndex, hoverIndex) => {\n    const item = items[dragIndex];\n\n    setItems((prevState) => {\n      const newItems = prevState.filter((i, idx) => idx !== dragIndex);\n      newItems.splice(hoverIndex, 0, item);\n      return [...newItems];\n    });\n  };\n\n  return (\n    <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n      <NavigationPlayList />\n      {match.isExact === true ? (\n        <h1 style={{ alignSelf: \"center\", margin: \"15% 0\" }}>\n          Manage your playList\n        </h1>\n      ) : (\n        <Statusses\n          isLoading={isLoading}\n          items={items}\n          moveItem={moveItem}\n          onDrop={onDrop}\n          statuses={statuses}\n          playList={playList}\n          setPlayList={setPlayList}\n          changeStatusItems={changeStatusItems}\n        />\n      )}\n      <Error isError={isError} massage={error?.message} />\n    </div>\n  );\n};\n\nexport default PlayList;\n"],"sourceRoot":""}