{"version":3,"sources":["api/apiHelper/apiHelper.js","api/apiAuthors.js","hook/authors/useFormAuthors.js","components/organism/authors/AddAuthor.js"],"names":["apiURL","process","apiActions","url","method","data","a","fetch","headers","body","JSON","stringify","res","json","Error","getAllAuthors","removeAuthor","id","addAuthor","updateAuthor","getAuthor","queryKey","useFormAuthors","add","path","useMutation","mutateAsync","isLoading","history","useHistory","onFormSubmit","push","FormAuthors","lazy","AddAuthor","type"],"mappings":"0MAAaA,EAAM,UAAMC,gCAAN,YAA0CA,qBAEhDC,EAAU,uCAAG,WAAOC,EAAKC,EAAQC,GAApB,eAAAC,EAAA,+EAEJC,MAAMJ,EAAK,CAC3BC,OAAQA,EACRI,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUN,KAPD,cAEhBO,EAFgB,yBASJ,WAAXR,GAA6BQ,EAAIC,QATlB,sCAWhB,IAAIC,MAAJ,sCAXgB,yDAAH,2D,0OCAVC,EAAgB,WAC3B,OAAOb,YAAW,GAAD,OAAIF,IAAJ,YAAsB,QAG5BgB,EAAe,SAACC,GAC3B,OAAOf,YAAW,GAAD,OAAIF,IAAJ,oBAAsBiB,GAAM,WAGlCC,EAAY,SAACb,GACxB,OAAOH,YAAW,GAAD,OAAIF,IAAJ,YAAsB,OAAQK,IAGpCc,EAAe,SAAC,GAAqB,IAAnBF,EAAkB,EAAlBA,GAAOZ,EAAW,sBAC/C,OAAOH,YAAW,GAAD,OAAIF,IAAJ,oBAAsBiB,GAAM,MAAOZ,IAGzCe,EAAY,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,cAElBA,EAFkB,GAE1BJ,GAF0B,UAE1BA,IACf,OAAOf,YAAW,GAAD,OAAIF,IAAJ,oBAAsBiB,GAAM,S,2HClBlCK,EAAiB,SAACC,EAAKC,GAAqB,IAAfP,EAAc,uDAAT,KAAS,EACnBQ,YAAYF,GAAvCG,EAD8C,EAC9CA,YAAaC,EADiC,EACjCA,UAEfC,EAAUC,cAEVC,EAAY,uCAAG,WAAOzB,GAAP,SAAAC,EAAA,sEACboB,EAAYT,EAAE,2BAAQZ,GAAR,IAAcY,OAAOZ,GADtB,OAEnBuB,EAAQG,KAAKP,GAFM,2CAAH,sDAKlB,MAAO,CAAEM,eAAcH,e,iCCbzB,mDAGMK,EAAcC,gBAAK,kBAAM,uDAuBhBC,UApBG,WAAO,IAAD,EACcZ,YAAeJ,IAAW,YAAtDS,EADc,EACdA,UAAWG,EADG,EACHA,aAEnB,OACE,8BACGH,EACC,cAAC,IAAD,IAEA,cAACK,EAAD,CACEG,KAAK,MACLL,aAAcA,EACdH,UAAWA,EAHb","file":"static/js/13.282aab3c.chunk.js","sourcesContent":["export const apiURL = `${process.env.REACT_APP_API_SERVER}/${process.env.REACT_APP_GITHUB_ACOUNT}`;\n\nexport const apiActions = async (url, method, data) => {\n  try {\n    const res = await fetch(url, {\n      method: method,\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    });\n    return method === \"DELETE\" ? true : res.json();\n  } catch (error) {\n    throw new Error(`somthing went wrong: ${error}`);\n  }\n};\n","import { apiActions, apiURL } from \"./apiHelper/apiHelper\";\n\nexport const getAllAuthors = () => {\n  return apiActions(`${apiURL}-authors`, \"GET\");\n};\n\nexport const removeAuthor = (id) => {\n  return apiActions(`${apiURL}-authors/${id}`, \"DELETE\");\n};\n\nexport const addAuthor = (data) => {\n  return apiActions(`${apiURL}-authors`, \"POST\", data);\n};\n\nexport const updateAuthor = ({ id, ...data }) => {\n  return apiActions(`${apiURL}-authors/${id}`, \"PUT\", data);\n};\n\nexport const getAuthor = ({ queryKey }) => {\n  /*eslint-disable no-unused-vars*/\n  const [_key, { id }] = queryKey;\n  return apiActions(`${apiURL}-authors/${id}`, \"GET\");\n};\n","import { useMutation } from \"react-query\";\nimport { useHistory } from \"react-router-dom\";\n\nexport const useFormAuthors = (add, path, id = null) => {\n  const { mutateAsync, isLoading } = useMutation(add);\n\n  const history = useHistory();\n\n  const onFormSubmit = async (data) => {\n    await mutateAsync(id ? { ...data, id } : data);\n    history.push(path);\n  };\n\n  return { onFormSubmit, isLoading };\n};\n","import React, { lazy } from \"react\";\nimport { addAuthor } from \"../../../api/apiAuthors\";\nimport Spinner from \"../../molecules/spinner/Spinner\";\nconst FormAuthors = lazy(() => import(\"./FormAuthors\"));\nimport { useFormAuthors } from \"../../../hook/authors/useFormAuthors\";\n\nconst AddAuthor = () => {\n  const { isLoading, onFormSubmit } = useFormAuthors(addAuthor, \"/authors\");\n\n  return (\n    <div>\n      {isLoading ? (\n        <Spinner />\n      ) : (\n        <FormAuthors\n          type=\"add\"\n          onFormSubmit={onFormSubmit}\n          isLoading={isLoading}\n        >\n          Add Author\n        </FormAuthors>\n      )}\n    </div>\n  );\n};\n\nexport default AddAuthor;\n"],"sourceRoot":""}