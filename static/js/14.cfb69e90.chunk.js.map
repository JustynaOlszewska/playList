{"version":3,"sources":["api/apiHelper/apiHelper.js","api/apiAuthors.js","styles/helperStyles/FlexDirection.js","styles/styleComponents/authors/StyledAuthors.js","components/pages/Authors.js"],"names":["apiURL","process","apiActions","url","method","data","a","fetch","headers","body","JSON","stringify","res","json","Error","getAllAuthors","removeAuthor","id","addAuthor","updateAuthor","getAuthor","queryKey","FlexDirection","css","StyledListAuthors","styled","section","StyledUl","ul","Author","lazy","Authors","useQuery","error","isLoading","isError","Button","color","to","Spinner","map","author","massage","message"],"mappings":"0MAAaA,EAAM,UAAMC,gCAAN,YAA0CA,qBAEhDC,EAAU,uCAAG,WAAOC,EAAKC,EAAQC,GAApB,eAAAC,EAAA,+EAEJC,MAAMJ,EAAK,CAC3BC,OAAQA,EACRI,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUN,KAPD,cAEhBO,EAFgB,yBASJ,WAAXR,GAA6BQ,EAAIC,QATlB,sCAWhB,IAAIC,MAAJ,sCAXgB,yDAAH,2D,0OCAVC,EAAgB,WAC3B,OAAOb,YAAW,GAAD,OAAIF,IAAJ,YAAsB,QAG5BgB,EAAe,SAACC,GAC3B,OAAOf,YAAW,GAAD,OAAIF,IAAJ,oBAAsBiB,GAAM,WAGlCC,EAAY,SAACb,GACxB,OAAOH,YAAW,GAAD,OAAIF,IAAJ,YAAsB,OAAQK,IAGpCc,EAAe,SAAC,GAAqB,IAAnBF,EAAkB,EAAlBA,GAAOZ,EAAW,sBAC/C,OAAOH,YAAW,GAAD,OAAIF,IAAJ,oBAAsBiB,GAAM,MAAOZ,IAGzCe,EAAY,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,cAElBA,EAFkB,GAE1BJ,GAF0B,UAE1BA,IACf,OAAOf,YAAW,GAAD,OAAIF,IAAJ,oBAAsBiB,GAAM,S,yFCnBlCK,EAAgBC,cAAH,0E,mHCCbC,EAAoBC,UAAOC,QAAV,kCAC1BJ,KAGSK,EAAWF,UAAOG,GAAV,kCACjBN,K,eCEEO,EAASC,gBAAK,kBAAM,kCACpBhB,EAAQgB,gBAAK,kBAAM,iCA2BVC,UAzBC,WAAO,IAAD,EACwBC,YAC1C,UACAjB,KAFMV,EADY,EACZA,KAAM4B,EADM,EACNA,MAAOC,EADD,EACCA,UAAWC,EADZ,EACYA,QAKhC,OACE,eAACX,EAAD,WACE,cAACY,EAAA,EAAD,CAAQC,MAAM,UAAd,SACE,cAAC,IAAD,CAASC,GAAE,aAAX,0BAEDJ,EACC,cAACK,EAAA,EAAD,IAEA,cAACZ,EAAD,UACGtB,EAAKmC,KAAI,SAACC,GAAD,OACR,cAACZ,EAAD,CAAwBY,OAAQA,EAAQxB,GAAIwB,EAAOxB,IAAtCwB,EAAOxB,SAI1B,cAACH,EAAD,CAAOqB,QAASA,EAASO,QAAO,OAAET,QAAF,IAAEA,OAAF,EAAEA,EAAOU","file":"static/js/14.cfb69e90.chunk.js","sourcesContent":["export const apiURL = `${process.env.REACT_APP_API_SERVER}/${process.env.REACT_APP_GITHUB_ACOUNT}`;\n\nexport const apiActions = async (url, method, data) => {\n  try {\n    const res = await fetch(url, {\n      method: method,\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    });\n    return method === \"DELETE\" ? true : res.json();\n  } catch (error) {\n    throw new Error(`somthing went wrong: ${error}`);\n  }\n};\n","import { apiActions, apiURL } from \"./apiHelper/apiHelper\";\n\nexport const getAllAuthors = () => {\n  return apiActions(`${apiURL}-authors`, \"GET\");\n};\n\nexport const removeAuthor = (id) => {\n  return apiActions(`${apiURL}-authors/${id}`, \"DELETE\");\n};\n\nexport const addAuthor = (data) => {\n  return apiActions(`${apiURL}-authors`, \"POST\", data);\n};\n\nexport const updateAuthor = ({ id, ...data }) => {\n  return apiActions(`${apiURL}-authors/${id}`, \"PUT\", data);\n};\n\nexport const getAuthor = ({ queryKey }) => {\n  /*eslint-disable no-unused-vars*/\n  const [_key, { id }] = queryKey;\n  return apiActions(`${apiURL}-authors/${id}`, \"GET\");\n};\n","import { css } from \"styled-components\";\n\nexport const FlexDirection = css`\n  display: flex;\n  flex-direction: column;\n`;\n","import styled from \"styled-components\";\nimport { FlexDirection } from \"../../helperStyles/FlexDirection\";\n\nexport const StyledListAuthors = styled.section`\n  ${FlexDirection}\n`;\n\nexport const StyledUl = styled.ul`\n  ${FlexDirection}\n`;\n","import React, { lazy } from \"react\";\nimport { useQuery } from \"react-query\";\nimport { NavLink } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\nimport { getAllAuthors } from \"../../api/apiAuthors\";\nimport {\n  StyledListAuthors,\n  StyledUl,\n} from \"../../styles/styleComponents/authors/StyledAuthors\";\nimport Spinner from \"../molecules/spinner/Spinner\";\nconst Author = lazy(() => import(\"../molecules/authors/Author\"));\nconst Error = lazy(() => import(\"../atom/Error\"));\n\nconst Authors = () => {\n  const { data, error, isLoading, isError } = useQuery(\n    \"authors\",\n    getAllAuthors\n  );\n\n  return (\n    <StyledListAuthors>\n      <Button color=\"inherit\">\n        <NavLink to={`/addAuthor`}>Add Author</NavLink>\n      </Button>\n      {isLoading ? (\n        <Spinner />\n      ) : (\n        <StyledUl>\n          {data.map((author) => (\n            <Author key={author.id} author={author} id={author.id} />\n          ))}\n        </StyledUl>\n      )}\n      <Error isError={isError} massage={error?.message} />\n    </StyledListAuthors>\n  );\n};\n\nexport default Authors;\n"],"sourceRoot":""}