{"version":3,"sources":["../node_modules/react-dnd/dist/esm/common/DragSourceMonitorImpl.js","../node_modules/react-dnd/dist/esm/common/SourceConnector.js","../node_modules/react-dnd/dist/esm/hooks/internal/drag.js","../node_modules/react-dnd/dist/esm/hooks/useDrag.js","components/organism/playList/AllSongs.js"],"names":["_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","isCallingCanDrag","isCallingIsDragging","DragSourceMonitorImpl","manager","instance","Constructor","TypeError","_classCallCheck","this","sourceId","internalMonitor","getMonitor","protoProps","staticProps","value","invariant","canDragSource","isDraggingSource","listener","options","subscribeToStateChange","targetId","isOverTarget","getTargetIds","isSourcePublic","getSourceId","subscribeToOffsetChange","canDropOnTarget","getItemType","getItem","getDropResult","didDrop","getInitialClientOffset","getInitialSourceClientOffset","getSourceClientOffset","getClientOffset","getDifferenceFromInitialOffset","prototype","SourceConnector","backend","_this","hooks","wrapConnectorHooks","dragSource","node","clearDragSource","dragSourceOptions","isRef","dragSourceRef","dragSourceNode","reconnectDragSource","dragPreview","clearDragPreview","dragPreviewOptions","dragPreviewRef","dragPreviewNode","reconnectDragPreview","handlerId","dragSourceOptionsInternal","dragPreviewOptionsInternal","lastConnectedHandlerId","lastConnectedDragSource","lastConnectedDragSourceOptions","lastConnectedDragPreview","lastConnectedDragPreviewOptions","newHandlerId","reconnect","didChange","didHandlerIdChange","didConnectedDragSourceChange","didDragSourceOptionsChange","disconnectDragSource","dragSourceUnsubscribe","connectDragSource","didConnectedDragPreviewChange","didDragPreviewOptionsChange","disconnectDragPreview","dragPreviewUnsubscribe","connectDragPreview","shallowEqual","undefined","get","set","current","_slicedToArray","arr","Array","isArray","_arrayWithHoles","Symbol","iterator","_arr","_n","_d","_e","_s","_i","next","done","push","err","_iterableToArrayLimit","o","minLen","_arrayLikeToArray","n","toString","call","slice","constructor","name","from","test","_unsupportedIterableToArray","_nonIterableRest","len","arr2","_typeof","obj","useDrag","spec","specRef","useRef","item","type","_useDragSourceMonitor2","useDragDropManager","useMemo","getBackend","useDragSourceMonitor","monitor","connector","handler","beginDrag","_spec$current","begin","beginResult","canDrag","isDragging","globalMonitor","endDrag","end","useIsomorphicLayoutEffect","_registerSource2","registerSource","unregister","receiveHandlerId","useDragHandler","result","useMonitorOutput","collect","previewOptions","AllSongs","onDropSongs","songsType","index","song","dropResult","dragRef","ref","title","id"],"mappings":"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","file":"static/js/22.c7ecf1ea.chunk.js","sourcesContent":["function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nimport { invariant } from '@react-dnd/invariant';\nvar isCallingCanDrag = false;\nvar isCallingIsDragging = false;\nexport var DragSourceMonitorImpl = /*#__PURE__*/function () {\n  function DragSourceMonitorImpl(manager) {\n    _classCallCheck(this, DragSourceMonitorImpl);\n\n    this.sourceId = null;\n    this.internalMonitor = manager.getMonitor();\n  }\n\n  _createClass(DragSourceMonitorImpl, [{\n    key: \"receiveHandlerId\",\n    value: function receiveHandlerId(sourceId) {\n      this.sourceId = sourceId;\n    }\n  }, {\n    key: \"getHandlerId\",\n    value: function getHandlerId() {\n      return this.sourceId;\n    }\n  }, {\n    key: \"canDrag\",\n    value: function canDrag() {\n      invariant(!isCallingCanDrag, 'You may not call monitor.canDrag() inside your canDrag() implementation. ' + 'Read more: http://react-dnd.github.io/react-dnd/docs/api/drag-source-monitor');\n\n      try {\n        isCallingCanDrag = true;\n        return this.internalMonitor.canDragSource(this.sourceId);\n      } finally {\n        isCallingCanDrag = false;\n      }\n    }\n  }, {\n    key: \"isDragging\",\n    value: function isDragging() {\n      if (!this.sourceId) {\n        return false;\n      }\n\n      invariant(!isCallingIsDragging, 'You may not call monitor.isDragging() inside your isDragging() implementation. ' + 'Read more: http://react-dnd.github.io/react-dnd/docs/api/drag-source-monitor');\n\n      try {\n        isCallingIsDragging = true;\n        return this.internalMonitor.isDraggingSource(this.sourceId);\n      } finally {\n        isCallingIsDragging = false;\n      }\n    }\n  }, {\n    key: \"subscribeToStateChange\",\n    value: function subscribeToStateChange(listener, options) {\n      return this.internalMonitor.subscribeToStateChange(listener, options);\n    }\n  }, {\n    key: \"isDraggingSource\",\n    value: function isDraggingSource(sourceId) {\n      return this.internalMonitor.isDraggingSource(sourceId);\n    }\n  }, {\n    key: \"isOverTarget\",\n    value: function isOverTarget(targetId, options) {\n      return this.internalMonitor.isOverTarget(targetId, options);\n    }\n  }, {\n    key: \"getTargetIds\",\n    value: function getTargetIds() {\n      return this.internalMonitor.getTargetIds();\n    }\n  }, {\n    key: \"isSourcePublic\",\n    value: function isSourcePublic() {\n      return this.internalMonitor.isSourcePublic();\n    }\n  }, {\n    key: \"getSourceId\",\n    value: function getSourceId() {\n      return this.internalMonitor.getSourceId();\n    }\n  }, {\n    key: \"subscribeToOffsetChange\",\n    value: function subscribeToOffsetChange(listener) {\n      return this.internalMonitor.subscribeToOffsetChange(listener);\n    }\n  }, {\n    key: \"canDragSource\",\n    value: function canDragSource(sourceId) {\n      return this.internalMonitor.canDragSource(sourceId);\n    }\n  }, {\n    key: \"canDropOnTarget\",\n    value: function canDropOnTarget(targetId) {\n      return this.internalMonitor.canDropOnTarget(targetId);\n    }\n  }, {\n    key: \"getItemType\",\n    value: function getItemType() {\n      return this.internalMonitor.getItemType();\n    }\n  }, {\n    key: \"getItem\",\n    value: function getItem() {\n      return this.internalMonitor.getItem();\n    }\n  }, {\n    key: \"getDropResult\",\n    value: function getDropResult() {\n      return this.internalMonitor.getDropResult();\n    }\n  }, {\n    key: \"didDrop\",\n    value: function didDrop() {\n      return this.internalMonitor.didDrop();\n    }\n  }, {\n    key: \"getInitialClientOffset\",\n    value: function getInitialClientOffset() {\n      return this.internalMonitor.getInitialClientOffset();\n    }\n  }, {\n    key: \"getInitialSourceClientOffset\",\n    value: function getInitialSourceClientOffset() {\n      return this.internalMonitor.getInitialSourceClientOffset();\n    }\n  }, {\n    key: \"getSourceClientOffset\",\n    value: function getSourceClientOffset() {\n      return this.internalMonitor.getSourceClientOffset();\n    }\n  }, {\n    key: \"getClientOffset\",\n    value: function getClientOffset() {\n      return this.internalMonitor.getClientOffset();\n    }\n  }, {\n    key: \"getDifferenceFromInitialOffset\",\n    value: function getDifferenceFromInitialOffset() {\n      return this.internalMonitor.getDifferenceFromInitialOffset();\n    }\n  }]);\n\n  return DragSourceMonitorImpl;\n}();","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nimport { wrapConnectorHooks } from './wrapConnectorHooks';\nimport { isRef } from '../utils/isRef';\nimport { shallowEqual } from '@react-dnd/shallowequal';\nexport var SourceConnector = /*#__PURE__*/function () {\n  function SourceConnector(backend) {\n    var _this = this;\n\n    _classCallCheck(this, SourceConnector);\n\n    this.hooks = wrapConnectorHooks({\n      dragSource: function dragSource(node, options) {\n        _this.clearDragSource();\n\n        _this.dragSourceOptions = options || null;\n\n        if (isRef(node)) {\n          _this.dragSourceRef = node;\n        } else {\n          _this.dragSourceNode = node;\n        }\n\n        _this.reconnectDragSource();\n      },\n      dragPreview: function dragPreview(node, options) {\n        _this.clearDragPreview();\n\n        _this.dragPreviewOptions = options || null;\n\n        if (isRef(node)) {\n          _this.dragPreviewRef = node;\n        } else {\n          _this.dragPreviewNode = node;\n        }\n\n        _this.reconnectDragPreview();\n      }\n    });\n    this.handlerId = null; // The drop target may either be attached via ref or connect function\n\n    this.dragSourceRef = null;\n    this.dragSourceOptionsInternal = null; // The drag preview may either be attached via ref or connect function\n\n    this.dragPreviewRef = null;\n    this.dragPreviewOptionsInternal = null;\n    this.lastConnectedHandlerId = null;\n    this.lastConnectedDragSource = null;\n    this.lastConnectedDragSourceOptions = null;\n    this.lastConnectedDragPreview = null;\n    this.lastConnectedDragPreviewOptions = null;\n    this.backend = backend;\n  }\n\n  _createClass(SourceConnector, [{\n    key: \"receiveHandlerId\",\n    value: function receiveHandlerId(newHandlerId) {\n      if (this.handlerId === newHandlerId) {\n        return;\n      }\n\n      this.handlerId = newHandlerId;\n      this.reconnect();\n    }\n  }, {\n    key: \"reconnect\",\n    value: function reconnect() {\n      this.reconnectDragSource();\n      this.reconnectDragPreview();\n    }\n  }, {\n    key: \"reconnectDragSource\",\n    value: function reconnectDragSource() {\n      var dragSource = this.dragSource; // if nothing has changed then don't resubscribe\n\n      var didChange = this.didHandlerIdChange() || this.didConnectedDragSourceChange() || this.didDragSourceOptionsChange();\n\n      if (didChange) {\n        this.disconnectDragSource();\n      }\n\n      if (!this.handlerId) {\n        return;\n      }\n\n      if (!dragSource) {\n        this.lastConnectedDragSource = dragSource;\n        return;\n      }\n\n      if (didChange) {\n        this.lastConnectedHandlerId = this.handlerId;\n        this.lastConnectedDragSource = dragSource;\n        this.lastConnectedDragSourceOptions = this.dragSourceOptions;\n        this.dragSourceUnsubscribe = this.backend.connectDragSource(this.handlerId, dragSource, this.dragSourceOptions);\n      }\n    }\n  }, {\n    key: \"reconnectDragPreview\",\n    value: function reconnectDragPreview() {\n      var dragPreview = this.dragPreview; // if nothing has changed then don't resubscribe\n\n      var didChange = this.didHandlerIdChange() || this.didConnectedDragPreviewChange() || this.didDragPreviewOptionsChange();\n\n      if (didChange) {\n        this.disconnectDragPreview();\n      }\n\n      if (!this.handlerId) {\n        return;\n      }\n\n      if (!dragPreview) {\n        this.lastConnectedDragPreview = dragPreview;\n        return;\n      }\n\n      if (didChange) {\n        this.lastConnectedHandlerId = this.handlerId;\n        this.lastConnectedDragPreview = dragPreview;\n        this.lastConnectedDragPreviewOptions = this.dragPreviewOptions;\n        this.dragPreviewUnsubscribe = this.backend.connectDragPreview(this.handlerId, dragPreview, this.dragPreviewOptions);\n      }\n    }\n  }, {\n    key: \"didHandlerIdChange\",\n    value: function didHandlerIdChange() {\n      return this.lastConnectedHandlerId !== this.handlerId;\n    }\n  }, {\n    key: \"didConnectedDragSourceChange\",\n    value: function didConnectedDragSourceChange() {\n      return this.lastConnectedDragSource !== this.dragSource;\n    }\n  }, {\n    key: \"didConnectedDragPreviewChange\",\n    value: function didConnectedDragPreviewChange() {\n      return this.lastConnectedDragPreview !== this.dragPreview;\n    }\n  }, {\n    key: \"didDragSourceOptionsChange\",\n    value: function didDragSourceOptionsChange() {\n      return !shallowEqual(this.lastConnectedDragSourceOptions, this.dragSourceOptions);\n    }\n  }, {\n    key: \"didDragPreviewOptionsChange\",\n    value: function didDragPreviewOptionsChange() {\n      return !shallowEqual(this.lastConnectedDragPreviewOptions, this.dragPreviewOptions);\n    }\n  }, {\n    key: \"disconnectDragSource\",\n    value: function disconnectDragSource() {\n      if (this.dragSourceUnsubscribe) {\n        this.dragSourceUnsubscribe();\n        this.dragSourceUnsubscribe = undefined;\n      }\n    }\n  }, {\n    key: \"disconnectDragPreview\",\n    value: function disconnectDragPreview() {\n      if (this.dragPreviewUnsubscribe) {\n        this.dragPreviewUnsubscribe();\n        this.dragPreviewUnsubscribe = undefined;\n        this.dragPreviewNode = null;\n        this.dragPreviewRef = null;\n      }\n    }\n  }, {\n    key: \"clearDragSource\",\n    value: function clearDragSource() {\n      this.dragSourceNode = null;\n      this.dragSourceRef = null;\n    }\n  }, {\n    key: \"clearDragPreview\",\n    value: function clearDragPreview() {\n      this.dragPreviewNode = null;\n      this.dragPreviewRef = null;\n    }\n  }, {\n    key: \"connectTarget\",\n    get: function get() {\n      return this.dragSource;\n    }\n  }, {\n    key: \"dragSourceOptions\",\n    get: function get() {\n      return this.dragSourceOptionsInternal;\n    },\n    set: function set(options) {\n      this.dragSourceOptionsInternal = options;\n    }\n  }, {\n    key: \"dragPreviewOptions\",\n    get: function get() {\n      return this.dragPreviewOptionsInternal;\n    },\n    set: function set(options) {\n      this.dragPreviewOptionsInternal = options;\n    }\n  }, {\n    key: \"dragSource\",\n    get: function get() {\n      return this.dragSourceNode || this.dragSourceRef && this.dragSourceRef.current;\n    }\n  }, {\n    key: \"dragPreview\",\n    get: function get() {\n      return this.dragPreviewNode || this.dragPreviewRef && this.dragPreviewRef.current;\n    }\n  }]);\n\n  return SourceConnector;\n}();","function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nimport { useMemo } from 'react';\nimport { invariant } from '@react-dnd/invariant';\nimport { registerSource } from '../../common/registration';\nimport { useDragDropManager } from '../useDragDropManager';\nimport { DragSourceMonitorImpl } from '../../common/DragSourceMonitorImpl';\nimport { SourceConnector } from '../../common/SourceConnector';\nimport { useIsomorphicLayoutEffect } from './useIsomorphicLayoutEffect';\nexport function useDragSourceMonitor() {\n  var manager = useDragDropManager();\n  var monitor = useMemo(function () {\n    return new DragSourceMonitorImpl(manager);\n  }, [manager]);\n  var connector = useMemo(function () {\n    return new SourceConnector(manager.getBackend());\n  }, [manager]);\n  return [monitor, connector];\n}\nexport function useDragHandler(spec, monitor, connector) {\n  var manager = useDragDropManager();\n  var handler = useMemo(function () {\n    return {\n      beginDrag: function beginDrag() {\n        var _spec$current = spec.current,\n            begin = _spec$current.begin,\n            item = _spec$current.item;\n\n        if (begin) {\n          var beginResult = begin(monitor);\n          invariant(beginResult == null || _typeof(beginResult) === 'object', 'dragSpec.begin() must either return an object, undefined, or null');\n          return beginResult || item || {};\n        }\n\n        return item || {};\n      },\n      canDrag: function canDrag() {\n        if (typeof spec.current.canDrag === 'boolean') {\n          return spec.current.canDrag;\n        } else if (typeof spec.current.canDrag === 'function') {\n          return spec.current.canDrag(monitor);\n        } else {\n          return true;\n        }\n      },\n      isDragging: function isDragging(globalMonitor, target) {\n        var isDragging = spec.current.isDragging;\n        return isDragging ? isDragging(monitor) : target === globalMonitor.getSourceId();\n      },\n      endDrag: function endDrag() {\n        var end = spec.current.end;\n\n        if (end) {\n          end(monitor.getItem(), monitor);\n        }\n\n        connector.reconnect();\n      }\n    };\n  }, []);\n  useIsomorphicLayoutEffect(function registerHandler() {\n    var _registerSource = registerSource(spec.current.item.type, handler, manager),\n        _registerSource2 = _slicedToArray(_registerSource, 2),\n        handlerId = _registerSource2[0],\n        unregister = _registerSource2[1];\n\n    monitor.receiveHandlerId(handlerId);\n    connector.receiveHandlerId(handlerId);\n    return unregister;\n  }, []);\n}","function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport { useRef, useMemo } from 'react';\nimport { invariant } from '@react-dnd/invariant';\nimport { useMonitorOutput } from './internal/useMonitorOutput';\nimport { useIsomorphicLayoutEffect } from './internal/useIsomorphicLayoutEffect';\nimport { useDragSourceMonitor, useDragHandler } from './internal/drag';\n/**\n * useDragSource hook\n * @param sourceSpec The drag source specification *\n */\n\nexport function useDrag(spec) {\n  var specRef = useRef(spec);\n  specRef.current = spec; // TODO: wire options into createSourceConnector\n\n  invariant(spec.item != null, 'item must be defined');\n  invariant(spec.item.type != null, 'item type must be defined');\n\n  var _useDragSourceMonitor = useDragSourceMonitor(),\n      _useDragSourceMonitor2 = _slicedToArray(_useDragSourceMonitor, 2),\n      monitor = _useDragSourceMonitor2[0],\n      connector = _useDragSourceMonitor2[1];\n\n  useDragHandler(specRef, monitor, connector);\n  var result = useMonitorOutput(monitor, specRef.current.collect || function () {\n    return {};\n  }, function () {\n    return connector.reconnect();\n  });\n  var connectDragSource = useMemo(function () {\n    return connector.hooks.dragSource();\n  }, [connector]);\n  var connectDragPreview = useMemo(function () {\n    return connector.hooks.dragPreview();\n  }, [connector]);\n  useIsomorphicLayoutEffect(function () {\n    connector.dragSourceOptions = specRef.current.options || null;\n    connector.reconnect();\n  }, [connector]);\n  useIsomorphicLayoutEffect(function () {\n    connector.dragPreviewOptions = specRef.current.previewOptions || null;\n    connector.reconnect();\n  }, [connector]);\n  return [result, connectDragSource, connectDragPreview];\n}","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useDrag } from \"react-dnd\";\n\nconst AllSongs = ({ onDropSongs, songsType, index, song }) => {\n  //eslint-disable-next-line\n  const [{ isDragging }, dragRef] = useDrag({\n    item: {\n      type: songsType,\n      index,\n    },\n    end: (item, monitor) => {\n      const dropResult = monitor.getDropResult();\n      if (item && dropResult) {\n        onDropSongs(item);\n      }\n    },\n    collect: (monitor) => ({\n      isDragging: monitor.isDragging(),\n    }),\n  });\n  return (\n    <li ref={dragRef}>\n      {song.title}\n      {song.id}\n    </li>\n  );\n};\n\nAllSongs.propTypes = {\n  song: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string,\n  }),\n  index: PropTypes.number,\n  songsType: PropTypes.string,\n  onDropSongs: PropTypes.func,\n};\nexport default AllSongs;\n"],"sourceRoot":""}