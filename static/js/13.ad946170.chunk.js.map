{"version":3,"sources":["api/apiHelper/apiHelper.js","styles/helperStyles/FlexDirection.js","api/apiSongs.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","constants/data.js","styles/styleComponents/playList/StyledStatusses.js","components/molecules/playList/Statusses.js"],"names":["apiURL","process","apiActions","url","method","data","a","fetch","headers","body","JSON","stringify","res","json","Error","FlexDirection","css","getAllSongs","removeSong","id","addSong","updateSong","getSong","queryKey","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","_defineProperty","obj","value","configurable","writable","statuses","status","navigationPlayList","pathDetail","primary","add","StyledStatusses","styled","section","StyledContainerHead","div","StyledH2PlayList","h2","Items","lazy","Item","DropWrapper","Statusses","match","useRouteMatch","useQuery","isLoading","isError","error","useState","items","setItems","playList","setPlayList","isOver","setIsOver","useEffect","dataCopy","parse","map","e","changeStatusItems","useCallback","itemsCopy","itemsSongs","item","itemsPlaylist","onDrop","monitor","addToPlayList","prevState","newItems","index","concat","newPlayList","some","findIndex","title","splice","moveItem","dragIndex","hoverIndex","idx","element","toUpperCase","Spinner","path","massage","message"],"mappings":"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","file":"static/js/13.ad946170.chunk.js","sourcesContent":["export const apiURL = `${process.env.REACT_APP_API_SERVER}/${process.env.REACT_APP_GITHUB_ACOUNT}`;\n\nexport const apiActions = async (url, method, data) => {\n  try {\n    const res = await fetch(url, {\n      method: method,\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    });\n    return method === \"DELETE\" ? true : res.json();\n  } catch (error) {\n    throw new Error(`somthing went wrong: ${error}`);\n  }\n};\n","import { css } from \"styled-components\";\n\nexport const FlexDirection = css`\n  display: flex;\n  flex-direction: column;\n`;\n","import { apiActions, apiURL } from \"./apiHelper/apiHelper\";\n\nexport const getAllSongs = () => {\n  return apiActions(`${apiURL}-songs`, \"GET\");\n};\n\nexport const removeSong = (id) => {\n  return apiActions(`${apiURL}-songs/${id}`, \"DELETE\");\n};\n\nexport const addSong = (data) => {\n  return apiActions(`${apiURL}-songs`, \"POST\", data);\n};\n\nexport const updateSong = ({ id, ...data }) => {\n  return apiActions(`${apiURL}-songs/${id}`, \"PUT\", data);\n};\n\nexport const getSong = ({ queryKey }) => {\n  /*eslint-disable no-unused-vars*/\n  const [_key, { id }] = queryKey;\n  return apiActions(`${apiURL}-songs/${id}`, \"GET\");\n};\n","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","export const statuses = [\n  {\n    status: \"songs\",\n  },\n  {\n    status: \"playList\",\n  },\n];\n\nexport const navigationPlayList = [\n  {\n    pathDetail: \"/add\",\n    primary: \"Add playlist\",\n    add: \"add\",\n  },\n  {\n    pathDetail: \"/update\",\n    primary: \"Update playlist\",\n  },\n];\n","import styled from \"styled-components\";\nimport { FlexDirection } from \"../../helperStyles/FlexDirection\";\nexport const StyledStatusses = styled.section`\n  display: flex;\n`;\n\nexport const StyledContainerHead = styled.div`\n  ${FlexDirection}\n  margin: 20px;\n  padding: 20px;\n  border-radius: 5px;\n  text-align: center;\n`;\n\nexport const StyledH2PlayList = styled.h2`\n  font-size: 20px;\n  font-weight: 600;\n  margin-bottom: 20px;\n  margin-top: 0;\n`;\n","import React, { lazy, useState, useEffect, useCallback } from \"react\";\nimport { Route, Switch, useRouteMatch } from \"react-router-dom\";\nimport { useQuery } from \"react-query\";\nimport {\n  StyledContainerHead,\n  StyledH2PlayList,\n  StyledStatusses,\n} from \"../../../styles/styleComponents/playList/StyledStatusses\";\nimport { getAllSongs } from \"../../../api/apiSongs\";\nimport { statuses } from \"../../../constants/data\";\nimport Spinner from \"../spinner/Spinner\";\nconst Items = lazy(() => import(\"./Items\"));\nconst Item = lazy(() => import(\"../../molecules/playList/Item\"));\nconst DropWrapper = lazy(() => import(\"../../organism/playList/DropWrapper\"));\nconst Error = lazy(() => import(\"../../atom/Error\"));\n\nconst Statusses = () => {\n  const match = useRouteMatch();\n  const { data, isLoading, isError, error } = useQuery(\"songs\", getAllSongs);\n\n  const [items, setItems] = useState([]);\n  const [playList, setPlayList] = useState([]);\n  const [isOver, setIsOver] = useState();\n\n  useEffect(() => {\n    if (!isLoading) {\n      const dataCopy = JSON.parse(JSON.stringify([...data]));\n      [dataCopy.map((e) => (e.status = \"songs\"))];\n      setItems(dataCopy);\n    }\n  }, [data]);\n\n  const changeStatusItems = useCallback(() => {\n    const itemsCopy = JSON.parse(JSON.stringify(items));\n    const itemsSongs = itemsCopy.filter((item) => item.status === \"songs\");\n    const itemsPlaylist = itemsCopy.filter(\n      (item) => item.status === \"playList\"\n    );\n    itemsPlaylist.forEach((e) => (e.status = \"songs\"));\n    setItems([...itemsSongs, ...itemsPlaylist]);\n\n    setPlayList([]);\n  },\n    [items],\n  );\n\n  const onDrop = (item, monitor, status) => {\n    addToPlayList(item, status);\n    setIsOver(isOver);\n    setItems((prevState) => {\n      const newItems = prevState\n        .filter((index) => index.id !== item.id)\n        .concat({ ...item, status });\n      return [...newItems];\n    });\n  };\n\n  const addToPlayList = useCallback((item, status) => {\n    const newPlayList = playList.some((e) => e.id === item.id);\n\n    if (status === \"playList\") {\n      !newPlayList && setPlayList([...playList, item]);\n    } else if (status === \"songs\") {\n      const index = playList.findIndex((e) => e.title === item.title);\n      newPlayList && playList.splice(index, 1);\n      setPlayList(playList);\n    }\n  },\n    [playList],\n  );\n\n  const moveItem = useCallback((dragIndex, hoverIndex) => {\n    const item = items[dragIndex];\n\n    setItems((prevState) => {\n      const newItems = prevState.filter((i, idx) => idx !== dragIndex);\n      newItems.splice(hoverIndex, 0, item);\n      return [...newItems];\n    });\n  },\n    [items],\n  );\n\n  return (\n    <>\n      <StyledStatusses>\n        {statuses.map((element) => (\n          <StyledContainerHead key={element.status}>\n            <StyledH2PlayList>{element.status.toUpperCase()}</StyledH2PlayList>\n            <DropWrapper\n              onDrop={onDrop}\n              status={element.status}\n              playList={playList}\n              setPlayList={setPlayList}\n              changeStatusItems={changeStatusItems}\n            >\n              {isLoading ? (\n                <Spinner />\n              ) : (\n                <Switch>\n                  {\" \"}\n                  <Route path={[`${match.path}/update`, `${match.path}/add`]}>\n                    <Items>\n                      {items\n                        .filter((item) => item.status === element.status)\n                        .map((item, idx) => (\n                          <Item\n                            key={item.id}\n                            id={item.id}\n                            item={item}\n                            index={idx}\n                            moveItem={moveItem}\n                            status={element}\n                          />\n                        ))}\n                    </Items>\n                  </Route>{\" \"}\n                </Switch>\n              )}\n            </DropWrapper>\n          </StyledContainerHead>\n        ))}\n      </StyledStatusses>\n      <Error isError={isError} massage={error?.message} />\n    </>\n  );\n};\n\nexport default Statusses;\n"],"sourceRoot":""}