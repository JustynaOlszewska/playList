{"version":3,"sources":["api/apiSongs.js","styles/styleComponents/songs/StyledSongDetails.js","components/molecules/songs/SongDetails.js"],"names":["apiURL","process","songActions","url","method","data","a","fetch","headers","body","JSON","stringify","res","json","Error","getAllSongs","removeSong","id","addSong","updateSong","getSong","queryKey","StyledDiv","styled","div","SongDetails","useParams","useQuery","error","isLoading","isError","Spinner","title","duration","author","name","playlists","message"],"mappings":"kUAAMA,EAAM,UAAMC,gCAAN,YAA0CA,qBAEhDC,EAAW,uCAAG,WAAOC,EAAKC,EAAQC,GAApB,eAAAC,EAAA,+EAEEC,MAAMJ,EAAK,CAC3BC,OAAQA,EACRI,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUN,KAPP,cAEVO,EAFU,yBASE,WAAXR,GAA6BQ,EAAIC,QATxB,sCAWV,IAAIC,MAAJ,sCAXU,yDAAH,0DAeJC,EAAc,WACzB,OAAOb,EAAY,GAAD,OAAIF,EAAJ,UAAoB,QAG3BgB,EAAa,SAACC,GACzB,OAAOf,EAAY,GAAD,OAAIF,EAAJ,kBAAoBiB,GAAM,WAGjCC,EAAU,SAACb,GACtB,OAAOH,EAAY,GAAD,OAAIF,EAAJ,UAAoB,OAAQK,IAGnCc,EAAa,SAAC,GAAqB,IAAnBF,EAAkB,EAAlBA,GAAOZ,EAAW,sBAC7C,OAAOH,EAAY,GAAD,OAAIF,EAAJ,kBAAoBiB,GAAM,MAAOZ,IAGxCe,EAAU,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,cAEhBA,EAFgB,GAExBJ,GAFwB,UAExBA,IACf,OAAOf,EAAY,GAAD,OAAIF,EAAJ,kBAAoBiB,GAAM,S,oFClCjCK,E,MAAYC,QAAOC,IAAV,oF,eCwCPC,UAlCK,WAAO,IAAD,EAChBR,EAAOS,cAAPT,GADgB,EAGoBU,YAC1C,CAAC,QAAS,CAAEV,OACZG,KAFMf,EAHgB,EAGhBA,KAAMuB,EAHU,EAGVA,MAAOC,EAHG,EAGHA,UAAWC,EAHR,EAGQA,QAKhC,OACE,eAACR,EAAD,WACGO,EACC,cAACE,EAAA,EAAD,IAEA,qCACE,6BAAK1B,EAAK2B,QACV,mDAAe3B,QAAf,IAAeA,OAAf,EAAeA,EAAM4B,SAArB,cACA,2CAAiB,OAAJ5B,QAAI,IAAJA,GAAA,UAAAA,EAAM6B,cAAN,eAAcC,OAAQ,oBACnC,oDAAgB9B,QAAhB,IAAgBA,OAAhB,EAAgBA,EAAM+B,gBAGzBN,GAAW,+BAAOF,EAAMS","file":"static/js/17.e97a4f56.chunk.js","sourcesContent":["const apiURL = `${process.env.REACT_APP_API_SERVER}/${process.env.REACT_APP_GITHUB_ACOUNT}`;\n\nconst songActions = async (url, method, data) => {\n  try {\n    const res = await fetch(url, {\n      method: method,\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    });\n    return method === \"DELETE\" ? true : res.json();\n  } catch (error) {\n    throw new Error(`somthing went wrong: ${error}`);\n  }\n};\n\nexport const getAllSongs = () => {\n  return songActions(`${apiURL}-songs`, \"GET\");\n};\n\nexport const removeSong = (id) => {\n  return songActions(`${apiURL}-songs/${id}`, \"DELETE\");\n};\n\nexport const addSong = (data) => {\n  return songActions(`${apiURL}-songs`, \"POST\", data);\n};\n\nexport const updateSong = ({ id, ...data }) => {\n  return songActions(`${apiURL}-songs/${id}`, \"PUT\", data);\n};\n\nexport const getSong = ({ queryKey }) => {\n  /*eslint-disable no-unused-vars*/\n  const [_key, { id }] = queryKey;\n  return songActions(`${apiURL}-songs/${id}`, \"GET\");\n};\n","import styled from \"styled-components\";\n\nexport const StyledDiv = styled.div`\n  height: 100%;\n  width: 100%;\n  text-align: center;\n`;\n","import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useQuery } from \"react-query\";\nimport { getSong } from \"../../../api/apiSongs\";\nimport PropTypes from \"prop-types\";\nimport { StyledDiv } from \"../../../styles/styleComponents/songs/StyledSongDetails\";\nimport Spinner from \"../../molecules/spinner/Spinner\";\n\nconst SongDetails = () => {\n  const { id } = useParams();\n\n  const { data, error, isLoading, isError } = useQuery(\n    [\"songs\", { id }],\n    getSong\n  );\n\n  return (\n    <StyledDiv>\n      {isLoading ? (\n        <Spinner />\n      ) : (\n        <>\n          <h1>{data.title}</h1>\n          <h4>Duration: {data?.duration} seconds</h4>\n          <h5>Author: {data?.author?.name || \"author unknown\"}</h5>\n          <h6>Playlists: {data?.playlists}</h6>\n        </>\n      )}\n      {isError && <span>{error.message}</span>}\n    </StyledDiv>\n  );\n};\n\nSongDetails.propTypes = {\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      id: PropTypes.number,\n    })\n  ),\n};\n\nexport default SongDetails;\n"],"sourceRoot":""}