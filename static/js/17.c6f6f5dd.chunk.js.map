{"version":3,"sources":["styles/styleComponents/authors/StyledFormAuthors.js","constants/validationForm.js","../node_modules/react-query/es/core/mutationObserver.js","../node_modules/react-query/es/react/useMutation.js","api/apiPlayList.js","hook/playList/usePlayList.js","styles/styleComponents/playList/StyledFormPlayListUpdate.js","components/organism/playList/FormPlayListUpdate.js","hook/playList/useId.js","styles/styleComponents/playList/StyledUpdatePlayList.js","components/organism/playList/UpdatePlayList.js"],"names":["StyledForm","styled","form","FlexDirection","type","css","update","add","StyledInput","TextField","typeSong","schemaValidationAuthors","yup","shape","name","required","max","schemaValidationSong","title","author","duration","typeError","schemaValidationPlayList","MutationObserver","_Subscribable","client","options","_this","call","this","setOptions","bindMethods","updateResult","_inheritsLoose","_proto","prototype","mutate","bind","reset","defaultMutationOptions","onUnsubscribe","_this$currentMutation","listeners","length","currentMutation","removeObserver","onMutationUpdate","action","notifyOptions","onSuccess","onError","notify","getCurrentResult","currentResult","undefined","variables","mutateOptions","getMutationCache","build","_extends","addObserver","execute","state","getDefaultState","isLoading","status","isSuccess","isError","isIdle","_this2","notifyManager","batch","data","context","onSettled","error","forEach","listener","Subscribable","useMutation","arg1","arg2","arg3","mountedRef","React","useRef","forceUpdate","useState","parseMutationArgs","queryClient","useQueryClient","obsRef","current","useEffect","unsubscribe","subscribe","batchCalls","x","useCallback","catch","noop","useErrorBoundary","mutateAsync","getAllPlayList","apiActions","apiURL","addPlayList","updatePlayList","id","getPlayList","queryKey","usePlayList","actionApiPlayList","playList","changeStatusItems","dataGetPlayListId","useSnackbar","enqueueSnackbar","onSubmit","copydataGetPlayListId","JSON","parse","stringify","songs","map","e","element","onFormSubmit","a","invalidateQueries","StyledFormWrapper","div","StyledInputLabel","InputLabel","StyledNativeSelect","NativeSelect","StyledDiv","StyledAlert","Alert","StyledContainerSongs","StyledSong","DropHere","lazy","Error","FormPlayListUpdate","children","findFirstElement","find","setIdElement","useQuery","errorPlayList","isLoadingPlayListId","isErrorPlayList","useId","useForm","resolver","yupResolver","register","handleSubmit","errors","message","htmlFor","onClick","newData","ee","target","value","inputRef","text","Button","variant","color","severity","Spinner","massage","memo","StyleUpdateWrapper","section","UpdatePlayList","isOver","setPlayList","cloneElement"],"mappings":"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","file":"static/js/17.c6f6f5dd.chunk.js","sourcesContent":["import styled, { css } from \"styled-components\";\nimport { FlexDirection } from \"../../helperStyles/FlexDirection\";\nimport TextField from \"@material-ui/core/TextField\";\n\nexport const StyledForm = styled.form`\n  ${FlexDirection}\n  align-items: center;\n  justify-content: center;\n  height: 60vh;\n  ${({ type }) =>\n    type === \"add\" &&\n    css`\n      text-transform: uppercase;\n      color: red;\n    `}\n  ${({ update }) =>\n    update === \"update\" &&\n    css`\n      height: 500px;\n      width: 200px;\n      justify-content: start;\n    `}\n    ${({ add }) =>\n    add === \"add\" &&\n    css`\n      height: 500px;\n      width: 200px;\n      justify-content: start;\n    `}\n  @media(min-height: 900px) {\n    justify-content: flex-start;\n  }\n`;\n\nexport const StyledInput = styled(TextField)`\n  margin: 10px 0;\n  ${({ typeSong }) =>\n    typeSong === \"song\" &&\n    css`\n      width: 100%;\n    `}\n`;\n","import * as yup from \"yup\";\n\nexport const schemaValidationAuthors = yup.object().shape({\n  name: yup\n    .string()\n    .required(\"Title field is required\")\n    .max(30, \"Title field should contains max 30 characters\"),\n});\n\nexport const schemaValidationSong = yup.object().shape({\n  title: yup\n    .string()\n    .required(\"Title field is required\")\n    .max(30, \"Title field should contains max 30 characters\"),\n  author: yup.string().required(\"Author fields is required\"),\n  duration: yup\n    .number()\n    .typeError(\"Duration field must be a number\")\n    .required(\"Duration field is required\"),\n});\n\nexport const schemaValidationPlayList = yup.object().shape({\n  name: yup\n    .string()\n    .required(\"Playlist name field is required\")\n    .max(30, \"Playlist name field should contains max 30 characters\"),\n});\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport { getDefaultState } from './mutation';\nimport { notifyManager } from './notifyManager';\nimport { Subscribable } from './subscribable';\n// CLASS\nexport var MutationObserver = /*#__PURE__*/function (_Subscribable) {\n  _inheritsLoose(MutationObserver, _Subscribable);\n\n  function MutationObserver(client, options) {\n    var _this;\n\n    _this = _Subscribable.call(this) || this;\n    _this.client = client;\n\n    _this.setOptions(options);\n\n    _this.bindMethods();\n\n    _this.updateResult();\n\n    return _this;\n  }\n\n  var _proto = MutationObserver.prototype;\n\n  _proto.bindMethods = function bindMethods() {\n    this.mutate = this.mutate.bind(this);\n    this.reset = this.reset.bind(this);\n  };\n\n  _proto.setOptions = function setOptions(options) {\n    this.options = this.client.defaultMutationOptions(options);\n  };\n\n  _proto.onUnsubscribe = function onUnsubscribe() {\n    if (!this.listeners.length) {\n      var _this$currentMutation;\n\n      (_this$currentMutation = this.currentMutation) == null ? void 0 : _this$currentMutation.removeObserver(this);\n    }\n  };\n\n  _proto.onMutationUpdate = function onMutationUpdate(action) {\n    this.updateResult(); // Determine which callbacks to trigger\n\n    var notifyOptions = {\n      listeners: true\n    };\n\n    if (action.type === 'success') {\n      notifyOptions.onSuccess = true;\n    } else if (action.type === 'error') {\n      notifyOptions.onError = true;\n    }\n\n    this.notify(notifyOptions);\n  };\n\n  _proto.getCurrentResult = function getCurrentResult() {\n    return this.currentResult;\n  };\n\n  _proto.reset = function reset() {\n    this.currentMutation = undefined;\n    this.updateResult();\n    this.notify({\n      listeners: true\n    });\n  };\n\n  _proto.mutate = function mutate(variables, options) {\n    this.mutateOptions = options;\n\n    if (this.currentMutation) {\n      this.currentMutation.removeObserver(this);\n    }\n\n    this.currentMutation = this.client.getMutationCache().build(this.client, _extends({}, this.options, {\n      variables: typeof variables !== 'undefined' ? variables : this.options.variables\n    }));\n    this.currentMutation.addObserver(this);\n    return this.currentMutation.execute();\n  };\n\n  _proto.updateResult = function updateResult() {\n    var state = this.currentMutation ? this.currentMutation.state : getDefaultState();\n    this.currentResult = _extends({}, state, {\n      isLoading: state.status === 'loading',\n      isSuccess: state.status === 'success',\n      isError: state.status === 'error',\n      isIdle: state.status === 'idle',\n      mutate: this.mutate,\n      reset: this.reset\n    });\n  };\n\n  _proto.notify = function notify(options) {\n    var _this2 = this;\n\n    notifyManager.batch(function () {\n      // First trigger the mutate callbacks\n      if (_this2.mutateOptions) {\n        if (options.onSuccess) {\n          _this2.mutateOptions.onSuccess == null ? void 0 : _this2.mutateOptions.onSuccess(_this2.currentResult.data, _this2.currentResult.variables, _this2.currentResult.context);\n          _this2.mutateOptions.onSettled == null ? void 0 : _this2.mutateOptions.onSettled(_this2.currentResult.data, null, _this2.currentResult.variables, _this2.currentResult.context);\n        } else if (options.onError) {\n          _this2.mutateOptions.onError == null ? void 0 : _this2.mutateOptions.onError(_this2.currentResult.error, _this2.currentResult.variables, _this2.currentResult.context);\n          _this2.mutateOptions.onSettled == null ? void 0 : _this2.mutateOptions.onSettled(undefined, _this2.currentResult.error, _this2.currentResult.variables, _this2.currentResult.context);\n        }\n      } // Then trigger the listeners\n\n\n      if (options.listeners) {\n        _this2.listeners.forEach(function (listener) {\n          listener(_this2.currentResult);\n        });\n      }\n    });\n  };\n\n  return MutationObserver;\n}(Subscribable);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport { notifyManager } from '../core/notifyManager';\nimport { noop, parseMutationArgs } from '../core/utils';\nimport { MutationObserver } from '../core/mutationObserver';\nimport { useQueryClient } from './QueryClientProvider';\nexport function useMutation(arg1, arg2, arg3) {\n  var mountedRef = React.useRef(false);\n\n  var _React$useState = React.useState(0),\n      forceUpdate = _React$useState[1];\n\n  var options = parseMutationArgs(arg1, arg2, arg3);\n  var queryClient = useQueryClient();\n  var obsRef = React.useRef();\n\n  if (!obsRef.current) {\n    obsRef.current = new MutationObserver(queryClient, options);\n  } else {\n    obsRef.current.setOptions(options);\n  }\n\n  var currentResult = obsRef.current.getCurrentResult();\n  React.useEffect(function () {\n    mountedRef.current = true;\n    var unsubscribe = obsRef.current.subscribe(notifyManager.batchCalls(function () {\n      if (mountedRef.current) {\n        forceUpdate(function (x) {\n          return x + 1;\n        });\n      }\n    }));\n    return function () {\n      mountedRef.current = false;\n      unsubscribe();\n    };\n  }, []);\n  var mutate = React.useCallback(function (variables, mutateOptions) {\n    obsRef.current.mutate(variables, mutateOptions).catch(noop);\n  }, []);\n\n  if (currentResult.error && obsRef.current.options.useErrorBoundary) {\n    throw currentResult.error;\n  }\n\n  return _extends({}, currentResult, {\n    mutate: mutate,\n    mutateAsync: currentResult.mutate\n  });\n}","import { apiActions, apiURL } from \"./apiHelper/apiHelper\";\n\nexport const getAllPlayList = () => {\n  return apiActions(`${apiURL}-playlists`, \"GET\");\n};\n\nexport const removePlayList = (id) => {\n  return apiActions(`${apiURL}-playlists/${id}`, \"DELETE\");\n};\n\nexport const addPlayList = (data) => {\n  return apiActions(`${apiURL}-playlists`, \"POST\", data);\n};\n\nexport const updatePlayList = ({ id, ...data }) => {\n  return apiActions(`${apiURL}-playlists/${id}`, \"PUT\", data);\n};\n\nexport const getPlayList = ({ queryKey }) => {\n  /*eslint-disable no-unused-vars*/\n  const [_key, { id }] = queryKey;\n  return apiActions(`${apiURL}-playlists/${id}`, \"GET\");\n};\n","import { useMutation, useQueryClient } from \"react-query\";\nimport { useSnackbar } from \"notistack\";\n\nexport const usePlayList = (\n  actionApiPlayList,\n  playList,\n  changeStatusItems,\n  reset = null,\n  dataGetPlayListId = null,\n  id = null\n) => {\n  const { enqueueSnackbar } = useSnackbar();\n\n  const queryClient = useQueryClient();\n\n  const { mutateAsync, isLoading } = useMutation(actionApiPlayList);\n\n  const onSubmit = (data) => {\n    if (playList.length !== 0) {\n      const copydataGetPlayListId = JSON.parse(\n        JSON.stringify(dataGetPlayListId)\n      );\n      const songs = copydataGetPlayListId\n        ? [\n            ...copydataGetPlayListId.songs.map((e) => e.id),\n            ...playList.map((element) => element.id),\n          ]\n        : playList.map((element) => element.id);\n      onFormSubmit(data, songs);\n      changeStatusItems();\n      reset !== null && reset();\n    } else {\n      enqueueSnackbar(\"Your playlist is empty\");\n    }\n  };\n\n  const onFormSubmit = async (data, songs) => {\n    const { name } = data || {};\n    await mutateAsync(id ? { name, songs, id } : { name, songs });\n    queryClient.invalidateQueries(\"playlists\");\n  };\n\n  return { onSubmit, isLoading };\n};\n","import styled from \"styled-components\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\nimport Alert from \"@material-ui/lab/Alert\";\n\nexport const StyledFormWrapper = styled.div`\n  display: flex;\n  position: relative;\n`;\nexport const StyledInputLabel = styled(InputLabel)`\n  margin: 10px 0;\n`;\nexport const StyledNativeSelect = styled(NativeSelect)`\n  width: 100px;\n  height: 30px;\n  margin: 0 0 20px 0;\n`;\nexport const StyledDiv = styled.div`\n  width: 200px;\n  height: 100%;\n  display: flex;\n  align-items: center;\n`;\nexport const StyledAlert = styled(Alert)`\n  position: absolute;\n  top: 50%;\n  z-index: 3;\n  width: 100vw;\n`;\nexport const StyledContainerSongs = styled.div`\n  background-color: #fddd55;\n  margin: 0 0 0 15%;\n  height: 400px;\n  box-shadow: 5px 5px 8px #888888;\n`;\nexport const StyledSong = styled.div`\n  width: 200px;\n`;\n","import React, { lazy } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport PropTypes from \"prop-types\";\nimport Button from \"@material-ui/core/Button\";\nimport { StyledForm } from \"../../../styles/styleComponents/authors/StyledFormAuthors\";\nimport { updatePlayList } from \"../../../api/apiPlayList\";\nimport { schemaValidationPlayList } from \"../../../constants/validationForm\";\nimport { usePlayList } from \"../../../hook/playList/usePlayList\";\nimport { useId } from \"../../../hook/playList/useId\";\nimport {\n  StyledFormWrapper,\n  StyledInputLabel,\n  StyledNativeSelect,\n  StyledDiv,\n  StyledAlert,\n  StyledContainerSongs,\n  StyledSong,\n} from \"../../../styles/styleComponents/playList/StyledFormPlayListUpdate.js\";\nimport Spinner from \"../../molecules/spinner/Spinner\";\nconst DropHere = lazy(() => import(\"../../molecules/playList/DropHere\"));\nconst Error = lazy(() => import(\"../../atom/Error\"));\n\nconst FormPlayListUpdate = ({\n  playList,\n  data,\n  children,\n  changeStatusItems,\n  type,\n}) => {\n  const {\n    id,\n    dataGetPlayListId,\n    errorPlayList,\n    isLoadingPlayListId,\n    isErrorPlayList,\n    setIdElement,\n  } = useId(data);\n\n  const { register, handleSubmit, errors } = useForm({\n    resolver: yupResolver(schemaValidationPlayList),\n  });\n  const { name: { message = null } = {} } = errors || {};\n  const { songs = {} } = dataGetPlayListId || {};\n\n  const handleClickName = (e) => {\n    const newData = data.find((ee) => ee.name === e.target.value);\n    setIdElement(newData.id);\n  };\n  const { onSubmit, isLoading } = usePlayList(\n    updatePlayList,\n    playList,\n    changeStatusItems,\n    null,\n    dataGetPlayListId,\n    id\n  );\n\n  return (\n    <StyledFormWrapper>\n      <StyledForm update=\"update\" onSubmit={handleSubmit(onSubmit)}>\n        <StyledInputLabel htmlFor=\"name\">Choose some playlist</StyledInputLabel>\n        <StyledNativeSelect\n          onClick={handleClickName}\n          id=\"name\"\n          name=\"name\"\n          errors={message}\n          inputRef={register}\n        >\n          {isLoading\n            ? \"Wait...\"\n            : data.map(({ name, id }) => <option key={id}>{name}</option>)}\n        </StyledNativeSelect>\n        <StyledDiv>\n          <DropHere playList={playList} text=\"Drop here songs\">\n            {children}\n          </DropHere>\n        </StyledDiv>\n        <Button variant=\"outlined\" color=\"primary\" type=\"Submit\">\n          {isLoading ? \"Wait...\" : type}\n        </Button>\n      </StyledForm>\n      {message && <StyledAlert severity=\"error\">{message}</StyledAlert>}\n      <StyledContainerSongs>\n        {isLoadingPlayListId ? (\n          <Spinner />\n        ) : (\n          songs.map(({ title, id }) => (\n            <StyledSong key={id}>{title}</StyledSong>\n          ))\n        )}\n      </StyledContainerSongs>\n      <Error isError={isErrorPlayList} massage={errorPlayList?.message} />\n    </StyledFormWrapper>\n  );\n};\n\nFormPlayListUpdate.propTypes = {\n  children: PropTypes.node,\n  playList: PropTypes.array,\n  data: PropTypes.array,\n  setPlayList: PropTypes.func,\n  changeStatusItems: PropTypes.func,\n  type: PropTypes.string,\n};\n\nexport default React.memo(FormPlayListUpdate);\n","import { useState } from \"react\";\nimport { useQuery } from \"react-query\";\nimport { getPlayList } from \"../../api/apiPlayList\";\n\nexport const useId = (data) => {\n  const findFirstElement = data.find(({ id }) => id);\n  const [id, setIdElement] = useState(findFirstElement.id);\n\n  const {\n    data: dataGetPlayListId,\n    error: errorPlayList,\n    isLoading: isLoadingPlayListId,\n    isError: isErrorPlayList,\n  } = useQuery([\"playlists\", { id }], getPlayList);\n\n  return {\n    id,\n    dataGetPlayListId,\n    errorPlayList,\n    isLoadingPlayListId,\n    isErrorPlayList,\n    setIdElement,\n  };\n};\n","import styled from \"styled-components\";\n\nexport const StyleUpdateWrapper = styled.section`\n  flex-grow: 3;\n  display: flex;\n`;\n","import React from \"react\";\nimport { useQuery } from \"react-query\";\nimport PropTypes from \"prop-types\";\nimport FormPlayListUpdate from \"./FormPlayListUpdate\";\nimport { getAllPlayList } from \"../../../api/apiPlayList\";\nimport { StyleUpdateWrapper } from \"../../../styles/styleComponents/playList/StyledUpdatePlayList\";\nimport Spinner from \"../../molecules/spinner/Spinner\";\n\nconst UpdatePlayList = ({\n  children,\n  isOver,\n  playList,\n  setPlayList,\n  changeStatusItems,\n}) => {\n  const { data, isLoading } = useQuery(\"playlists\", getAllPlayList);\n\n  return isLoading ? (\n    <Spinner />\n  ) : (\n    <StyleUpdateWrapper>\n      <FormPlayListUpdate\n        setPlayList={setPlayList}\n        playList={playList}\n        data={JSON.parse(JSON.stringify(data))}\n        changeStatusItems={changeStatusItems}\n        type=\"Update\"\n      >\n        {React.cloneElement(children, { isOver })}\n      </FormPlayListUpdate>\n    </StyleUpdateWrapper>\n  );\n};\n\nUpdatePlayList.propTypes = {\n  children: PropTypes.node,\n  isOver: PropTypes.bool,\n  playList: PropTypes.array,\n  setPlayList: PropTypes.func,\n  changeStatusItems: PropTypes.func,\n};\n\nexport default React.memo(UpdatePlayList);\n"],"sourceRoot":""}