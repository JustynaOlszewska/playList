{"version":3,"sources":["styles/helperStyles/FlexDirection.js","styles/styleComponents/StyledFormAuthors.js","components/organism/authors/FormAuthors.js"],"names":["FlexDirection","css","StyledForm","styled","form","props","type","StyledInput","input","FormAuthors","defaultValues","onFormSubmit","isLoading","useForm","register","handleSubmit","errors","onSubmit","data","InputLabel","htmlFor","id","name","ref","Button","variant","color","exampleRequired"],"mappings":"6JAEaA,EAAgBC,cAAH,0E,uGCCbC,EAAaC,UAAOC,KAAV,8GACnBJ,KAIA,SAACK,GAAD,MACe,QAAfA,EAAMC,MACNL,cADA,wFAOSM,EAAcJ,UAAOK,MAAV,+C,OCqBTC,UA3BK,SAAC,GAAsD,IAApDC,EAAmD,EAAnDA,cAAeC,EAAoC,EAApCA,aAAcC,EAAsB,EAAtBA,UAAWN,EAAW,EAAXA,KAAW,EAC7BO,YAAQ,CAAEH,kBAA7CI,EADgE,EAChEA,SAAUC,EADsD,EACtDA,aAAcC,EADwC,EACxCA,OAE1BC,EAAWF,GAAa,SAACG,GAC7BP,EAAaO,MAGf,OACE,eAAChB,EAAD,CAAYI,KAAMA,EAAMW,SAAUA,EAAlC,UACE,6BAAc,QAATX,EAAiB,aAAe,kBACrC,cAACa,EAAA,EAAD,CAAYC,QAAQ,OAApB,oBACA,cAACb,EAAD,CAAaD,KAAK,OAAOe,GAAG,OAAOC,KAAK,OAAOC,IAAKT,IACpD,cAACU,EAAA,EAAD,CAAQC,QAAQ,WAAWC,MAAM,UAAUpB,KAAK,SAAhD,SACGM,EAAY,UAAqB,QAATN,EAAiB,MAAQ,WAEnDU,EAAOW,iBAAmB","file":"static/js/1.b1e639df.chunk.js","sourcesContent":["import { css } from \"styled-components\";\n\nexport const FlexDirection = css`\n  display: flex;\n  flex-direction: column;\n`;\n","import styled, { css } from \"styled-components\";\nimport { FlexDirection } from \"../helperStyles/FlexDirection\";\n\nexport const StyledForm = styled.form`\n  ${FlexDirection}\n  align-items: center;\n  justify-content: center;\n  height: 60vh;\n  ${(props) =>\n    props.type === \"add\" &&\n    css`\n      text-transform: uppercase;\n      color: red;\n    `}\n`;\n\nexport const StyledInput = styled.input`\n  margin: 10px 0;\n`;\n","import React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport PropTypes from \"prop-types\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Button from \"@material-ui/core/Button\";\nimport {\n  StyledForm,\n  StyledInput,\n} from \"../../../styles/styleComponents/StyledFormAuthors\";\n\nconst FormAuthors = ({ defaultValues, onFormSubmit, isLoading, type }) => {\n  const { register, handleSubmit, errors } = useForm({ defaultValues });\n\n  const onSubmit = handleSubmit((data) => {\n    onFormSubmit(data);\n  });\n\n  return (\n    <StyledForm type={type} onSubmit={onSubmit}>\n      <h1>{type === \"add\" ? \"Add Author\" : \"Change Author\"}</h1>\n      <InputLabel htmlFor=\"name\">Author</InputLabel>\n      <StyledInput type=\"text\" id=\"name\" name=\"name\" ref={register} />\n      <Button variant=\"outlined\" color=\"primary\" type=\"Submit\">\n        {isLoading ? \"Wait...\" : type === \"add\" ? \"Add\" : \"Change\"}\n      </Button>\n      {errors.exampleRequired && <span>This field is required</span>}\n    </StyledForm>\n  );\n};\n\nFormAuthors.propTypes = {\n  defaultValues: PropTypes.number,\n  onFormSubmit: PropTypes.func.isRequired,\n  isLoading: PropTypes.bool.isRequired,\n  type: PropTypes.string.isRequired,\n};\n\nexport default FormAuthors;\n"],"sourceRoot":""}