{"version":3,"sources":["styles/helperStyles/FlexDirection.js","styles/styleComponents/authors/StyledFormAuthors.js","components/organism/authors/FormAuthors.js"],"names":["FlexDirection","css","StyledForm","styled","form","type","StyledInput","TextField","typeSong","schemaValidation","yup","shape","name","required","max","FormAuthors","defaultValue","onFormSubmit","isLoading","children","useForm","resolver","yupResolver","register","handleSubmit","errors","onSubmit","data","style","position","htmlFor","id","inputRef","variant","color","split","slice","exampleRequired","top","width","message","severity"],"mappings":"8JAEaA,EAAgBC,cAAH,0E,mJCEbC,EAAaC,UAAOC,KAAV,oLACnBJ,KAIA,kBACS,QADT,EAAGK,MAEHJ,cADA,wFAUSK,EAAcH,kBAAOI,IAAPJ,CAAH,sDAEpB,kBACa,SADb,EAAGK,UAEHP,cADA,wD,iCCvBJ,sFAYMQ,EAAmBC,MAAaC,MAAM,CAC1CC,KAAMF,MAEHG,SAAS,2BACTC,IAAI,GAAI,mDA4DEC,UAzDK,SAAC,GAMd,IAAD,IALJC,EAKI,EALJA,aACAC,EAII,EAJJA,aACAC,EAGI,EAHJA,UACAb,EAEI,EAFJA,KACAc,EACI,EADJA,SACI,EACuCC,YAAQ,CACjDJ,eACAK,SAAUC,YAAYb,KAFhBc,EADJ,EACIA,SAAUC,EADd,EACcA,aAAcC,EAD5B,EAC4BA,OAK1BC,EAAWF,GAAa,SAACG,GAC7BV,EAAaU,MAGf,OACE,mCACE,eAAC,IAAD,CACEC,MAAO,CAAEC,SAAU,YACnBxB,KAAMA,EACNqB,SAAUA,EAHZ,UAKE,6BAAKP,IACL,cAAC,IAAD,CAAYW,QAAQ,OAApB,oBACA,cAAC,IAAD,CACEd,aAAY,OAAEA,QAAF,IAAEA,OAAF,EAAEA,EAAcJ,KAC5BP,KAAK,OACL0B,GAAG,OACHnB,KAAK,OACLoB,SAAUT,EACVE,OAAQA,EAAOb,OAEjB,cAAC,IAAD,CAAQqB,QAAQ,WAAWC,MAAM,UAAU7B,KAAK,SAAhD,SACGa,EAAY,UAAYC,EAASgB,MAAM,KAAKC,MAAM,EAAG,KAEvDX,EAAOY,iBAAmB,0DAC3B,qBAAKT,MAAO,CAAEC,SAAU,WAAYS,IAAK,IAAKC,MAAO,QAArD,UACS,OAANd,QAAM,IAANA,GAAA,UAAAA,EAAQb,YAAR,eAAc4B,UACb,cAAC,IAAD,CAAOC,SAAS,QAAhB,SACE,mCAAIhB,QAAJ,IAAIA,GAAJ,UAAIA,EAAQb,YAAZ,aAAI,EAAc4B","file":"static/js/4.70085bc1.chunk.js","sourcesContent":["import { css } from \"styled-components\";\n\nexport const FlexDirection = css`\n  display: flex;\n  flex-direction: column;\n`;\n","import styled, { css } from \"styled-components\";\nimport { FlexDirection } from \"../../helperStyles/FlexDirection\";\nimport TextField from \"@material-ui/core/TextField\";\n\nexport const StyledForm = styled.form`\n  ${FlexDirection}\n  align-items: center;\n  justify-content: center;\n  height: 60vh;\n  ${({ type }) =>\n    type === \"add\" &&\n    css`\n      text-transform: uppercase;\n      color: red;\n    `}\n  @media(min-height: 900px) {\n    justify-content: flex-start;\n  }\n`;\n\nexport const StyledInput = styled(TextField)`\n  margin: 10px 0;\n  ${({ typeSong }) =>\n    typeSong === \"song\" &&\n    css`\n      width: 100%;\n    `}\n`;\n","import React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport PropTypes from \"prop-types\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Button from \"@material-ui/core/Button\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport {\n  StyledForm,\n  StyledInput,\n} from \"../../../styles/styleComponents/authors/StyledFormAuthors\";\nconst schemaValidation = yup.object().shape({\n  name: yup\n    .string()\n    .required(\"Title field is required\")\n    .max(30, \"Title field should contains max 30 characters\"),\n});\n\nconst FormAuthors = ({\n  defaultValue,\n  onFormSubmit,\n  isLoading,\n  type,\n  children,\n}) => {\n  const { register, handleSubmit, errors } = useForm({\n    defaultValue,\n    resolver: yupResolver(schemaValidation),\n  });\n\n  const onSubmit = handleSubmit((data) => {\n    onFormSubmit(data);\n  });\n\n  return (\n    <>\n      <StyledForm\n        style={{ position: \"relative\" }}\n        type={type}\n        onSubmit={onSubmit}\n      >\n        <h1>{children}</h1>\n        <InputLabel htmlFor=\"name\">Author</InputLabel>\n        <StyledInput\n          defaultValue={defaultValue?.name}\n          type=\"text\"\n          id=\"name\"\n          name=\"name\"\n          inputRef={register}\n          errors={errors.name}\n        />\n        <Button variant=\"outlined\" color=\"primary\" type=\"Submit\">\n          {isLoading ? \"Wait...\" : children.split(\" \").slice(0, 1)}\n        </Button>\n        {errors.exampleRequired && <span>This field is required</span>}\n        <div style={{ position: \"absolute\", top: \"0\", width: \"100%\" }}>\n          {errors?.name?.message && (\n            <Alert severity=\"error\">\n              <p>{errors?.name?.message}</p>\n            </Alert>\n          )}\n        </div>\n      </StyledForm>\n    </>\n  );\n};\n\nFormAuthors.propTypes = {\n  defaultValue: PropTypes.object,\n  onFormSubmit: PropTypes.func,\n  isLoading: PropTypes.bool.isRequired,\n  type: PropTypes.string.isRequired,\n  children: PropTypes.string.isRequired,\n};\n\nexport default FormAuthors;\n"],"sourceRoot":""}