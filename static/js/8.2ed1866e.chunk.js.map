{"version":3,"sources":["components/organism/authors/AddAuthor.js","api/apiAuthors.js"],"names":["FormAuthors","lazy","AddAuthor","history","useHistory","useMutation","addAuthor","mutateAsync","isLoading","onFormSubmit","data","a","push","getAllAuthors","fetch","process","res","json","Error","removeAuthor","id","method","headers","body","JSON","stringify","response","da","updateAuthor","getAuthor","queryKey"],"mappings":"uLAKMA,EAAcC,gBAAK,kBAAM,uDAqBhBC,UAnBG,WAChB,IAAMC,EAAUC,cADM,EAEaC,YAAYC,KAAvCC,EAFc,EAEdA,YAAaC,EAFC,EAEDA,UACfC,EAAY,uCAAG,WAAOC,GAAP,SAAAC,EAAA,sEACbJ,EAAYG,GADC,OAEnBP,EAAQS,KAAK,YAFM,2CAAH,sDAIlB,OACE,8BACGJ,EACC,cAAC,IAAD,IAEA,cAACR,EAAD,CAAaS,aAAcA,EAAcD,UAAWA,Q,uPCnB/CK,EAAa,uCAAG,4BAAAF,EAAA,+EAEPG,MAAM,GAAD,OAClBC,gCADkB,+BAFE,cAEnBC,EAFmB,yBAKlBA,EAAIC,QALc,sCAOnB,IAAIC,MAAJ,sCAPmB,yDAAH,qDAWbC,EAAY,uCAAG,WAAOC,GAAP,SAAAT,EAAA,+EAElBG,MAAM,GAAD,OACNC,gCADM,sCACwDK,GACjE,CACEC,OAAQ,WALY,iCAQjB,GARiB,sCAUlB,IAAIH,MAAJ,sCAVkB,wDAAH,sDAcZZ,EAAS,uCAAG,WAAOI,GAAP,iBAAAC,EAAA,+EAEEG,MAAM,GAAD,OACvBC,gCADuB,8BAE1B,CACEM,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUf,KATJ,cAEfgB,EAFe,gBAYJA,EAAST,OAZL,cAYfU,EAZe,yBAadA,GAbc,wCAef,IAAIT,MAAJ,sCAfe,0DAAH,sDAmBTU,EAAY,uCAAG,mCAAAjB,EAAA,6DAASS,EAAT,EAASA,GAAOV,EAAhB,wCAEDI,MAAM,GAAD,OACvBC,gCADuB,sCACuCK,GACjE,CACEC,OAAQ,MACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUf,KATD,cAElBgB,EAFkB,gBAYPA,EAAST,OAZF,cAYlBU,EAZkB,yBAajBA,GAbiB,wCAelB,IAAIT,MAAJ,sCAfkB,0DAAH,sDAmBZW,EAAS,uCAAG,mCAAAlB,EAAA,6DAASmB,EAAT,EAASA,SAAT,cAEAA,EAFA,QAERV,EAFQ,KAERA,GAFQ,kBAIEN,MAAM,GAAD,OACvBC,gCADuB,sCACuCK,IAL9C,cAIfM,EAJe,yBAOdA,EAAST,QAPK,sCASf,IAAIC,MAAJ,sCATe,yDAAH","file":"static/js/8.2ed1866e.chunk.js","sourcesContent":["import React, { lazy } from \"react\";\nimport { useMutation } from \"react-query\";\nimport { useHistory } from \"react-router-dom\";\nimport { addAuthor } from \"../../../api/apiAuthors\";\nimport Spinner from \"../../molecules/spinner/Spinner\";\nconst FormAuthors = lazy(() => import(\"./FormAuthors.js\"));\n\nconst AddAuthor = () => {\n  const history = useHistory();\n  const { mutateAsync, isLoading } = useMutation(addAuthor);\n  const onFormSubmit = async (data) => {\n    await mutateAsync(data);\n    history.push(\"/authors\");\n  };\n  return (\n    <div>\n      {isLoading ? (\n        <Spinner />\n      ) : (\n        <FormAuthors onFormSubmit={onFormSubmit} isLoading={isLoading} />\n      )}\n      {/* {isError && <span>Error: {error.message}</span>} */}\n    </div>\n  );\n};\n\nexport default AddAuthor;\n","export const getAllAuthors = async () => {\n  try {\n    const res = await fetch(\n      `${process.env.REACT_APP_API_SERVER}/justyna-olszewska-authors`\n    );\n    return res.json();\n  } catch (error) {\n    throw new Error(`somthing went wrong: ${error}`);\n  }\n};\n\nexport const removeAuthor = async (id) => {\n  try {\n    await fetch(\n      `${process.env.REACT_APP_API_SERVER}/justyna-olszewska-authors/${id}`,\n      {\n        method: \"DELETE\",\n      }\n    );\n    return true;\n  } catch (error) {\n    throw new Error(`somthing went wrong: ${error}`);\n  }\n};\n\nexport const addAuthor = async (data) => {\n  try {\n    const response = await fetch(\n      `${process.env.REACT_APP_API_SERVER}/justyna-olszewska-authors`,\n      {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(data),\n      }\n    );\n    const da = await response.json();\n    return da;\n  } catch (error) {\n    throw new Error(`somthing went wrong: ${error}`);\n  }\n};\n\nexport const updateAuthor = async ({ id, ...data }) => {\n  try {\n    const response = await fetch(\n      `${process.env.REACT_APP_API_SERVER}/justyna-olszewska-authors/${id}`,\n      {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(data),\n      }\n    );\n    const da = await response.json();\n    return da;\n  } catch (error) {\n    throw new Error(`somthing went wrong: ${error}`);\n  }\n};\n\nexport const getAuthor = async ({ queryKey }) => {\n  /*eslint-disable no-unused-vars*/\n  const [_key, { id }] = queryKey;\n  try {\n    const response = await fetch(\n      `${process.env.REACT_APP_API_SERVER}/justyna-olszewska-authors/${id}`\n    );\n    return response.json();\n  } catch (error) {\n    throw new Error(`somthing went wrong: ${error}`);\n  }\n};\n"],"sourceRoot":""}