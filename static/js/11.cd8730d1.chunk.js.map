{"version":3,"sources":["components/organism/authors/AddAuthor.js","api/apiAuthors.js","hook/authors/useFormAuthors.js"],"names":["FormAuthors","lazy","AddAuthor","useFormAuthors","addAuthor","isLoading","onFormSubmit","type","authorActions","url","method","data","a","fetch","headers","body","JSON","stringify","res","json","Error","getAllAuthors","process","removeAuthor","id","updateAuthor","getAuthor","queryKey","useMutation","mutateAsync","history","useHistory","push"],"mappings":"uGAAA,iDAGMA,EAAcC,gBAAK,kBAAM,sDAsBhBC,UAnBG,WAAO,IAAD,EACcC,YAAeC,KAA3CC,EADc,EACdA,UAAWC,EADG,EACHA,aAEnB,OACE,8BACGD,EACC,cAAC,IAAD,IAEA,cAACL,EAAD,CACEO,KAAK,MACLD,aAAcA,EACdD,UAAWA,EAHb,4B,uPCdFG,EAAa,uCAAG,WAAOC,EAAKC,EAAQC,GAApB,eAAAC,EAAA,+EAEAC,MAAMJ,EAAK,CAC3BC,OAAQA,EACRI,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUN,KAPL,cAEZO,EAFY,yBASA,WAAXR,GAA6BQ,EAAIC,QATtB,sCAWZ,IAAIC,MAAJ,sCAXY,yDAAH,0DAeNC,EAAgB,WAC3B,OAAOb,EAAc,GAAD,OACfc,gCADe,8BAElB,QAISC,EAAe,SAACC,GAC3B,OAAOhB,EAAc,GAAD,OACfc,gCADe,sCAC+CE,GACjE,WAISpB,EAAY,SAACO,GACxB,OAAOH,EAAc,GAAD,OACfc,gCADe,8BAElB,OACAX,IAISc,EAAe,SAAC,GAAqB,IAAnBD,EAAkB,EAAlBA,GAAOb,EAAW,sBAC/C,OAAOH,EAAc,GAAD,OACfc,gCADe,sCAC+CE,GACjE,MACAb,IAISe,EAAY,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,cAElBA,EAFkB,GAE1BH,GAF0B,UAE1BA,IACf,OAAOhB,EAAc,GAAD,OACfc,gCADe,sCAC+CE,GACjE,S,sHC/CSrB,EAAiB,SAACC,GAA0B,IAAfoB,EAAc,uDAAT,KAAS,EACnBI,YAAYxB,GAAvCyB,EAD8C,EAC9CA,YAAaxB,EADiC,EACjCA,UAEfyB,EAAUC,cAEVzB,EAAY,uCAAG,WAAOK,GAAP,SAAAC,EAAA,sEACbiB,EAAYL,EAAE,2BAAQb,GAAR,IAAca,OAAOb,GADtB,OAEnBmB,EAAQE,KAAK,YAFM,2CAAH,sDAKlB,MAAO,CAAE1B,eAAcD","file":"static/js/11.cd8730d1.chunk.js","sourcesContent":["import React, { lazy } from \"react\";\nimport { addAuthor } from \"../../../api/apiAuthors\";\nimport Spinner from \"../../molecules/spinner/Spinner\";\nconst FormAuthors = lazy(() => import(\"../FormAuthors.js\"));\nimport { useFormAuthors } from \"../../../hook/authors/useFormAuthors\";\n\nconst AddAuthor = () => {\n  const { isLoading, onFormSubmit } = useFormAuthors(addAuthor);\n\n  return (\n    <div>\n      {isLoading ? (\n        <Spinner />\n      ) : (\n        <FormAuthors\n          type=\"add\"\n          onFormSubmit={onFormSubmit}\n          isLoading={isLoading}\n        >Add Author\n        </FormAuthors>\n      )}\n    </div>\n  );\n};\n\nexport default AddAuthor;\n","const authorActions = async (url, method, data) => {\n  try {\n    const res = await fetch(url, {\n      method: method,\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    });\n    return method === \"DELETE\" ? true : res.json();\n  } catch (error) {\n    throw new Error(`somthing went wrong: ${error}`);\n  }\n};\n\nexport const getAllAuthors = () => {\n  return authorActions(\n    `${process.env.REACT_APP_API_SERVER}/justyna-olszewska-authors`,\n    \"GET\"\n  );\n};\n\nexport const removeAuthor = (id) => {\n  return authorActions(\n    `${process.env.REACT_APP_API_SERVER}/justyna-olszewska-authors/${id}`,\n    \"DELETE\"\n  );\n};\n\nexport const addAuthor = (data) => {\n  return authorActions(\n    `${process.env.REACT_APP_API_SERVER}/justyna-olszewska-authors`,\n    \"POST\",\n    data\n  );\n};\n\nexport const updateAuthor = ({ id, ...data }) => {\n  return authorActions(\n    `${process.env.REACT_APP_API_SERVER}/justyna-olszewska-authors/${id}`,\n    \"PUT\",\n    data\n  );\n};\n\nexport const getAuthor = ({ queryKey }) => {\n  /*eslint-disable no-unused-vars*/\n  const [_key, { id }] = queryKey;\n  return authorActions(\n    `${process.env.REACT_APP_API_SERVER}/justyna-olszewska-authors/${id}`,\n    \"GET\"\n  );\n};\n","import { useMutation } from \"react-query\";\nimport { useHistory } from \"react-router-dom\";\n\nexport const useFormAuthors = (addAuthor, id = null) => {\n  const { mutateAsync, isLoading } = useMutation(addAuthor);\n\n  const history = useHistory();\n\n  const onFormSubmit = async (data) => {\n    await mutateAsync(id ? { ...data, id } : data);\n    history.push(\"/authors\");\n  };\n\n  return { onFormSubmit, isLoading };\n};\n"],"sourceRoot":""}