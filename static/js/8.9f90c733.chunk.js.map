{"version":3,"sources":["components/organism/authors/AddAuthor.js","api/apiAuthors.js","hook/authors/useFormAuthors.js"],"names":["FormAuthors","lazy","AddAuthor","useFormAuthors","addAuthor","isLoading","onFormSubmit","type","authorActions","url","method","data","a","fetch","headers","body","JSON","stringify","res","json","Error","getAllAuthors","process","removeAuthor","id","updateAuthor","getAuthor","queryKey","useMutation","mutateAsync","history","useHistory","push"],"mappings":"sGAAA,iDAGMA,EAAcC,gBAAK,kBAAM,sDAsBhBC,UAnBG,WAAO,IAAD,EAEcC,YAAeC,KAA3CC,EAFc,EAEdA,UAAWC,EAFG,EAEHA,aAEnB,OACE,8BACGD,EACC,cAAC,IAAD,IAEA,cAACL,EAAD,CACEO,KAAK,MACLD,aAAcA,EACdD,UAAWA,Q,uPClBfG,EAAa,uCAAG,WAAOC,EAAKC,EAAQC,GAApB,eAAAC,EAAA,+EAEAC,MAAMJ,EACtB,CACEC,OAAQA,EACRI,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUN,KARP,cAEZO,EAFY,yBAWA,WAAXR,GAA6BQ,EAAIC,QAXtB,sCAaZ,IAAIC,MAAJ,sCAbY,yDAAH,0DAiBNC,EAAgB,WAC3B,OAAOb,EAAc,GAAD,OAAIc,gCAAJ,8BAAkE,QAG3EC,EAAe,SAACC,GAC3B,OAAOhB,EAAc,GAAD,OAAIc,gCAAJ,sCAAkEE,GAAM,WAGjFpB,EAAY,SAACO,GACxB,OAAOH,EAAc,GAAD,OAAIc,gCAAJ,8BAAkE,OAAQX,IAGnFc,EAAe,SAAC,GAAqB,IAAnBD,EAAkB,EAAlBA,GAAOb,EAAW,sBAC/C,OAAOH,EAAc,GAAD,OAAIc,gCAAJ,sCAAkEE,GAAM,MAAOb,IAGxFe,EAAY,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,cAElBA,EAFkB,GAE1BH,GAF0B,UAE1BA,IACf,OAAOhB,EAAc,GAAD,OAAIc,gCAAJ,sCAAkEE,GAAM,S,sHCjCjFrB,EAAiB,SAACC,GAA0B,IAAfoB,EAAc,uDAAT,KAAS,EAEjBI,YAAYxB,GAAvCyB,EAF4C,EAE5CA,YAAaxB,EAF+B,EAE/BA,UAEfyB,EAAUC,cAEVzB,EAAY,uCAAG,WAAOK,GAAP,SAAAC,EAAA,sEACXiB,EAAYL,EAAE,2BAAOb,GAAP,IAAaa,OAAMb,GADtB,OAEjBmB,EAAQE,KAAK,YAFI,2CAAH,sDAKlB,MACI,CAAE1B,eAAcD","file":"static/js/8.9f90c733.chunk.js","sourcesContent":["import React, { lazy } from \"react\";\nimport { addAuthor } from \"../../../api/apiAuthors\";\nimport Spinner from \"../../molecules/spinner/Spinner\";\nconst FormAuthors = lazy(() => import(\"./FormAuthors.js\"));\nimport { useFormAuthors } from \"../../../hook/authors/useFormAuthors\";\n\nconst AddAuthor = () => {\n\n  const { isLoading, onFormSubmit } = useFormAuthors(addAuthor)\n\n  return (\n    <div>\n      {isLoading ? (\n        <Spinner />\n      ) : (\n        <FormAuthors\n          type=\"add\"\n          onFormSubmit={onFormSubmit}\n          isLoading={isLoading}\n           />\n      )}\n    </div>\n  );\n};\n\nexport default AddAuthor;\n","const authorActions = async (url, method, data) => {\n  try {\n    const res = await fetch(url,\n      {\n        method: method,\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(data),\n      },\n    );\n    return method === \"DELETE\" ? true : res.json();\n  } catch (error) {\n    throw new Error(`somthing went wrong: ${error}`);\n  }\n};\n\nexport const getAllAuthors = () => {\n  return authorActions(`${process.env.REACT_APP_API_SERVER}/justyna-olszewska-authors`, \"GET\")\n};\n\nexport const removeAuthor = (id) => {\n  return authorActions(`${process.env.REACT_APP_API_SERVER}/justyna-olszewska-authors/${id}`, \"DELETE\")\n};\n\nexport const addAuthor = (data) => {\n  return authorActions(`${process.env.REACT_APP_API_SERVER}/justyna-olszewska-authors`, \"POST\", data)\n};\n\nexport const updateAuthor = ({ id, ...data }) => {\n  return authorActions(`${process.env.REACT_APP_API_SERVER}/justyna-olszewska-authors/${id}`, \"PUT\", data)\n};\n\nexport const getAuthor = ({ queryKey }) => {\n  /*eslint-disable no-unused-vars*/\n  const [_key, { id }] = queryKey;\n  return authorActions(`${process.env.REACT_APP_API_SERVER}/justyna-olszewska-authors/${id}`, \"GET\")\n};\n","import { useMutation } from \"react-query\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport const useFormAuthors = (addAuthor, id = null) => {\r\n\r\n    const { mutateAsync, isLoading } = useMutation(addAuthor);\r\n\r\n    const history = useHistory();\r\n\r\n    const onFormSubmit = async (data) => {\r\n        await mutateAsync(id ? {...data, id} : data);\r\n        history.push(\"/authors\");\r\n    };\r\n\r\n    return (\r\n        { onFormSubmit, isLoading }\r\n    );\r\n}\r\n"],"sourceRoot":""}