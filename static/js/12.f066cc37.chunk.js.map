{"version":3,"sources":["styles/helperStyles/FlexCenter.js","styles/styleComponents/StyledAuthor.js","components/molecules/authors/Author.js","../node_modules/react-query/es/core/mutationObserver.js","../node_modules/react-query/es/react/useMutation.js"],"names":["FlexCenter","css","StyledLi","styled","li","Author","author","queryClient","useQueryClient","useMutation","removeAuthor","mutateAsync","isLoading","name","id","remove","a","invalidateQueries","to","Button","variant","color","onClick","MutationObserver","_Subscribable","client","options","_this","call","this","setOptions","bindMethods","updateResult","_inheritsLoose","_proto","prototype","mutate","bind","reset","defaultMutationOptions","onUnsubscribe","_this$currentMutation","listeners","length","currentMutation","removeObserver","onMutationUpdate","action","notifyOptions","type","onSuccess","onError","notify","getCurrentResult","currentResult","undefined","variables","mutateOptions","getMutationCache","build","_extends","addObserver","execute","state","getDefaultState","status","isSuccess","isError","isIdle","_this2","notifyManager","batch","data","context","onSettled","error","forEach","listener","Subscribable","arg1","arg2","arg3","mountedRef","React","useRef","forceUpdate","useState","parseMutationArgs","obsRef","current","useEffect","unsubscribe","subscribe","batchCalls","x","useCallback","catch","noop","useErrorBoundary"],"mappings":"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","file":"static/js/12.f066cc37.chunk.js","sourcesContent":["import { css } from \"styled-components\";\n\nexport const FlexCenter = css`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n","import styled from \"styled-components\";\nimport { FlexCenter } from \"../helperStyles/FlexCenter\";\n\nexport const StyledLi = styled.li`\n  ${FlexCenter}\n  width: 70%;\n  margin: 10px auto;\n`;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { useMutation, useQueryClient } from \"react-query\";\nimport PropTypes from \"prop-types\";\nimport Button from \"@material-ui/core/Button\";\nimport { removeAuthor } from \"../../../api/apiAuthors\";\nimport { StyledLi } from \"../../../styles/styleComponents/StyledAuthor\";\n\nconst Author = ({ author }) => {\n  const queryClient = useQueryClient();\n\n  const { mutateAsync, isLoading } = useMutation(removeAuthor);\n\n  const { name, id } = author;\n\n  const remove = async () => {\n    await mutateAsync(id);\n    queryClient.invalidateQueries(\"authors\");\n  };\n\n  return (\n    <StyledLi>\n      <NavLink to={`/updateAuthors/${id}`}>{name}</NavLink>\n      <Button variant=\"outlined\" color=\"primary\" onClick={remove}>\n        {isLoading ? \"wait...\" : \"Delete\"}\n      </Button>\n    </StyledLi>\n  );\n};\n\nAuthor.propTypes = {\n  author: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    name: PropTypes.string,\n  }),\n};\n\nexport default Author;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport { getDefaultState } from './mutation';\nimport { notifyManager } from './notifyManager';\nimport { Subscribable } from './subscribable';\n// CLASS\nexport var MutationObserver = /*#__PURE__*/function (_Subscribable) {\n  _inheritsLoose(MutationObserver, _Subscribable);\n\n  function MutationObserver(client, options) {\n    var _this;\n\n    _this = _Subscribable.call(this) || this;\n    _this.client = client;\n\n    _this.setOptions(options);\n\n    _this.bindMethods();\n\n    _this.updateResult();\n\n    return _this;\n  }\n\n  var _proto = MutationObserver.prototype;\n\n  _proto.bindMethods = function bindMethods() {\n    this.mutate = this.mutate.bind(this);\n    this.reset = this.reset.bind(this);\n  };\n\n  _proto.setOptions = function setOptions(options) {\n    this.options = this.client.defaultMutationOptions(options);\n  };\n\n  _proto.onUnsubscribe = function onUnsubscribe() {\n    if (!this.listeners.length) {\n      var _this$currentMutation;\n\n      (_this$currentMutation = this.currentMutation) == null ? void 0 : _this$currentMutation.removeObserver(this);\n    }\n  };\n\n  _proto.onMutationUpdate = function onMutationUpdate(action) {\n    this.updateResult(); // Determine which callbacks to trigger\n\n    var notifyOptions = {\n      listeners: true\n    };\n\n    if (action.type === 'success') {\n      notifyOptions.onSuccess = true;\n    } else if (action.type === 'error') {\n      notifyOptions.onError = true;\n    }\n\n    this.notify(notifyOptions);\n  };\n\n  _proto.getCurrentResult = function getCurrentResult() {\n    return this.currentResult;\n  };\n\n  _proto.reset = function reset() {\n    this.currentMutation = undefined;\n    this.updateResult();\n    this.notify({\n      listeners: true\n    });\n  };\n\n  _proto.mutate = function mutate(variables, options) {\n    this.mutateOptions = options;\n\n    if (this.currentMutation) {\n      this.currentMutation.removeObserver(this);\n    }\n\n    this.currentMutation = this.client.getMutationCache().build(this.client, _extends({}, this.options, {\n      variables: typeof variables !== 'undefined' ? variables : this.options.variables\n    }));\n    this.currentMutation.addObserver(this);\n    return this.currentMutation.execute();\n  };\n\n  _proto.updateResult = function updateResult() {\n    var state = this.currentMutation ? this.currentMutation.state : getDefaultState();\n    this.currentResult = _extends({}, state, {\n      isLoading: state.status === 'loading',\n      isSuccess: state.status === 'success',\n      isError: state.status === 'error',\n      isIdle: state.status === 'idle',\n      mutate: this.mutate,\n      reset: this.reset\n    });\n  };\n\n  _proto.notify = function notify(options) {\n    var _this2 = this;\n\n    notifyManager.batch(function () {\n      // First trigger the mutate callbacks\n      if (_this2.mutateOptions) {\n        if (options.onSuccess) {\n          _this2.mutateOptions.onSuccess == null ? void 0 : _this2.mutateOptions.onSuccess(_this2.currentResult.data, _this2.currentResult.variables, _this2.currentResult.context);\n          _this2.mutateOptions.onSettled == null ? void 0 : _this2.mutateOptions.onSettled(_this2.currentResult.data, null, _this2.currentResult.variables, _this2.currentResult.context);\n        } else if (options.onError) {\n          _this2.mutateOptions.onError == null ? void 0 : _this2.mutateOptions.onError(_this2.currentResult.error, _this2.currentResult.variables, _this2.currentResult.context);\n          _this2.mutateOptions.onSettled == null ? void 0 : _this2.mutateOptions.onSettled(undefined, _this2.currentResult.error, _this2.currentResult.variables, _this2.currentResult.context);\n        }\n      } // Then trigger the listeners\n\n\n      if (options.listeners) {\n        _this2.listeners.forEach(function (listener) {\n          listener(_this2.currentResult);\n        });\n      }\n    });\n  };\n\n  return MutationObserver;\n}(Subscribable);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport { notifyManager } from '../core/notifyManager';\nimport { noop, parseMutationArgs } from '../core/utils';\nimport { MutationObserver } from '../core/mutationObserver';\nimport { useQueryClient } from './QueryClientProvider';\nexport function useMutation(arg1, arg2, arg3) {\n  var mountedRef = React.useRef(false);\n\n  var _React$useState = React.useState(0),\n      forceUpdate = _React$useState[1];\n\n  var options = parseMutationArgs(arg1, arg2, arg3);\n  var queryClient = useQueryClient();\n  var obsRef = React.useRef();\n\n  if (!obsRef.current) {\n    obsRef.current = new MutationObserver(queryClient, options);\n  } else {\n    obsRef.current.setOptions(options);\n  }\n\n  var currentResult = obsRef.current.getCurrentResult();\n  React.useEffect(function () {\n    mountedRef.current = true;\n    var unsubscribe = obsRef.current.subscribe(notifyManager.batchCalls(function () {\n      if (mountedRef.current) {\n        forceUpdate(function (x) {\n          return x + 1;\n        });\n      }\n    }));\n    return function () {\n      mountedRef.current = false;\n      unsubscribe();\n    };\n  }, []);\n  var mutate = React.useCallback(function (variables, mutateOptions) {\n    obsRef.current.mutate(variables, mutateOptions).catch(noop);\n  }, []);\n\n  if (currentResult.error && obsRef.current.options.useErrorBoundary) {\n    throw currentResult.error;\n  }\n\n  return _extends({}, currentResult, {\n    mutate: mutate,\n    mutateAsync: currentResult.mutate\n  });\n}"],"sourceRoot":""}